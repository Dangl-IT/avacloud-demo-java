/*
 * AVACloud API 1.55.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.55.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.danglit.avacloud.client.models.InvoiceLineItem;
import com.danglit.avacloud.client.models.InvoicePeriod;
import com.danglit.avacloud.client.models.LineItemAllowance;
import com.danglit.avacloud.client.models.LineItemCharge;
import com.danglit.avacloud.client.models.LineItemInformation;
import com.danglit.avacloud.client.models.LineItemPriceDetail;
import com.danglit.avacloud.client.models.LineItemVatInformation;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents a single invoice line item
 */
@ApiModel(description = "Represents a single invoice line item")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-02-11T12:55:14.413Z")
public class InvoiceLineItem {
  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("objectIdentifier")
  private String objectIdentifier = null;

  @SerializedName("quantity")
  private BigDecimal quantity = null;

  @SerializedName("unitCode")
  private String unitCode = null;

  @SerializedName("netAmount")
  private BigDecimal netAmount = null;

  @SerializedName("purchaseOrderReference")
  private String purchaseOrderReference = null;

  @SerializedName("lineItemPeriod")
  private InvoicePeriod lineItemPeriod = null;

  @SerializedName("allowances")
  private List<LineItemAllowance> allowances = null;

  @SerializedName("charges")
  private List<LineItemCharge> charges = null;

  @SerializedName("priceDetails")
  private LineItemPriceDetail priceDetails = null;

  @SerializedName("vatInformation")
  private List<LineItemVatInformation> vatInformation = null;

  @SerializedName("itemInformation")
  private LineItemInformation itemInformation = null;

  @SerializedName("subItems")
  private List<InvoiceLineItem> subItems = null;

  public InvoiceLineItem identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * An unique identifier for the line item
   * @return identifier
  **/
  @ApiModelProperty(value = "An unique identifier for the line item")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public InvoiceLineItem note(String note) {
    this.note = note;
    return this;
  }

   /**
   * An unstructured note to classify line items
   * @return note
  **/
  @ApiModelProperty(value = "An unstructured note to classify line items")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public InvoiceLineItem objectIdentifier(String objectIdentifier) {
    this.objectIdentifier = objectIdentifier;
    return this;
  }

   /**
   * A seller-defined object identifier for this line item, meaning an identifier for the actual line. This could be a numbering sequence or a reference to a product.
   * @return objectIdentifier
  **/
  @ApiModelProperty(value = "A seller-defined object identifier for this line item, meaning an identifier for the actual line. This could be a numbering sequence or a reference to a product.")
  public String getObjectIdentifier() {
    return objectIdentifier;
  }

  public void setObjectIdentifier(String objectIdentifier) {
    this.objectIdentifier = objectIdentifier;
  }

  public InvoiceLineItem quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * The actual invoiced quantity of the line item
   * @return quantity
  **/
  @ApiModelProperty(value = "The actual invoiced quantity of the line item")
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  public InvoiceLineItem unitCode(String unitCode) {
    this.unitCode = unitCode;
    return this;
  }

   /**
   * A code for the unit of the quantity. This should be a code as defined in UN/ECE Recommendation No. 20 „Codes for Units of Measure Used in  International Trade“ und UN/ECE Recommendation No 21 „Codes for Passengers, Types of Cargo, Packages and Packaging Materials(with Complementary Codes for Package Names)
   * @return unitCode
  **/
  @ApiModelProperty(value = "A code for the unit of the quantity. This should be a code as defined in UN/ECE Recommendation No. 20 „Codes for Units of Measure Used in  International Trade“ und UN/ECE Recommendation No 21 „Codes for Passengers, Types of Cargo, Packages and Packaging Materials(with Complementary Codes for Package Names)")
  public String getUnitCode() {
    return unitCode;
  }

  public void setUnitCode(String unitCode) {
    this.unitCode = unitCode;
  }

  public InvoiceLineItem netAmount(BigDecimal netAmount) {
    this.netAmount = netAmount;
    return this;
  }

   /**
   * The net amount for this line item. This is the total price for positions
   * @return netAmount
  **/
  @ApiModelProperty(value = "The net amount for this line item. This is the total price for positions")
  public BigDecimal getNetAmount() {
    return netAmount;
  }

  public void setNetAmount(BigDecimal netAmount) {
    this.netAmount = netAmount;
  }

  public InvoiceLineItem purchaseOrderReference(String purchaseOrderReference) {
    this.purchaseOrderReference = purchaseOrderReference;
    return this;
  }

   /**
   * A reference to an item in the buyers purachase order
   * @return purchaseOrderReference
  **/
  @ApiModelProperty(value = "A reference to an item in the buyers purachase order")
  public String getPurchaseOrderReference() {
    return purchaseOrderReference;
  }

  public void setPurchaseOrderReference(String purchaseOrderReference) {
    this.purchaseOrderReference = purchaseOrderReference;
  }

  public InvoiceLineItem lineItemPeriod(InvoicePeriod lineItemPeriod) {
    this.lineItemPeriod = lineItemPeriod;
    return this;
  }

   /**
   * Information about the invoice period for this line item.
   * @return lineItemPeriod
  **/
  @ApiModelProperty(value = "Information about the invoice period for this line item.")
  public InvoicePeriod getLineItemPeriod() {
    return lineItemPeriod;
  }

  public void setLineItemPeriod(InvoicePeriod lineItemPeriod) {
    this.lineItemPeriod = lineItemPeriod;
  }

  public InvoiceLineItem allowances(List<LineItemAllowance> allowances) {
    this.allowances = allowances;
    return this;
  }

  public InvoiceLineItem addAllowancesItem(LineItemAllowance allowancesItem) {
    if (this.allowances == null) {
      this.allowances = new ArrayList<>();
    }
    this.allowances.add(allowancesItem);
    return this;
  }

   /**
   * Allowances specific to this line item
   * @return allowances
  **/
  @ApiModelProperty(value = "Allowances specific to this line item")
  public List<LineItemAllowance> getAllowances() {
    return allowances;
  }

  public void setAllowances(List<LineItemAllowance> allowances) {
    this.allowances = allowances;
  }

  public InvoiceLineItem charges(List<LineItemCharge> charges) {
    this.charges = charges;
    return this;
  }

  public InvoiceLineItem addChargesItem(LineItemCharge chargesItem) {
    if (this.charges == null) {
      this.charges = new ArrayList<>();
    }
    this.charges.add(chargesItem);
    return this;
  }

   /**
   * charges specific to this line item
   * @return charges
  **/
  @ApiModelProperty(value = "charges specific to this line item")
  public List<LineItemCharge> getCharges() {
    return charges;
  }

  public void setCharges(List<LineItemCharge> charges) {
    this.charges = charges;
  }

  public InvoiceLineItem priceDetails(LineItemPriceDetail priceDetails) {
    this.priceDetails = priceDetails;
    return this;
  }

   /**
   * Price details for this line item.
   * @return priceDetails
  **/
  @ApiModelProperty(value = "Price details for this line item.")
  public LineItemPriceDetail getPriceDetails() {
    return priceDetails;
  }

  public void setPriceDetails(LineItemPriceDetail priceDetails) {
    this.priceDetails = priceDetails;
  }

  public InvoiceLineItem vatInformation(List<LineItemVatInformation> vatInformation) {
    this.vatInformation = vatInformation;
    return this;
  }

  public InvoiceLineItem addVatInformationItem(LineItemVatInformation vatInformationItem) {
    if (this.vatInformation == null) {
      this.vatInformation = new ArrayList<>();
    }
    this.vatInformation.add(vatInformationItem);
    return this;
  }

   /**
   * VAT information for this line item
   * @return vatInformation
  **/
  @ApiModelProperty(value = "VAT information for this line item")
  public List<LineItemVatInformation> getVatInformation() {
    return vatInformation;
  }

  public void setVatInformation(List<LineItemVatInformation> vatInformation) {
    this.vatInformation = vatInformation;
  }

  public InvoiceLineItem itemInformation(LineItemInformation itemInformation) {
    this.itemInformation = itemInformation;
    return this;
  }

   /**
   * Information about this line item
   * @return itemInformation
  **/
  @ApiModelProperty(value = "Information about this line item")
  public LineItemInformation getItemInformation() {
    return itemInformation;
  }

  public void setItemInformation(LineItemInformation itemInformation) {
    this.itemInformation = itemInformation;
  }

  public InvoiceLineItem subItems(List<InvoiceLineItem> subItems) {
    this.subItems = subItems;
    return this;
  }

  public InvoiceLineItem addSubItemsItem(InvoiceLineItem subItemsItem) {
    if (this.subItems == null) {
      this.subItems = new ArrayList<>();
    }
    this.subItems.add(subItemsItem);
    return this;
  }

   /**
   * Line items can be nested, in which case this property holds the sub items
   * @return subItems
  **/
  @ApiModelProperty(value = "Line items can be nested, in which case this property holds the sub items")
  public List<InvoiceLineItem> getSubItems() {
    return subItems;
  }

  public void setSubItems(List<InvoiceLineItem> subItems) {
    this.subItems = subItems;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceLineItem invoiceLineItem = (InvoiceLineItem) o;
    return Objects.equals(this.identifier, invoiceLineItem.identifier) &&
        Objects.equals(this.note, invoiceLineItem.note) &&
        Objects.equals(this.objectIdentifier, invoiceLineItem.objectIdentifier) &&
        Objects.equals(this.quantity, invoiceLineItem.quantity) &&
        Objects.equals(this.unitCode, invoiceLineItem.unitCode) &&
        Objects.equals(this.netAmount, invoiceLineItem.netAmount) &&
        Objects.equals(this.purchaseOrderReference, invoiceLineItem.purchaseOrderReference) &&
        Objects.equals(this.lineItemPeriod, invoiceLineItem.lineItemPeriod) &&
        Objects.equals(this.allowances, invoiceLineItem.allowances) &&
        Objects.equals(this.charges, invoiceLineItem.charges) &&
        Objects.equals(this.priceDetails, invoiceLineItem.priceDetails) &&
        Objects.equals(this.vatInformation, invoiceLineItem.vatInformation) &&
        Objects.equals(this.itemInformation, invoiceLineItem.itemInformation) &&
        Objects.equals(this.subItems, invoiceLineItem.subItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, note, objectIdentifier, quantity, unitCode, netAmount, purchaseOrderReference, lineItemPeriod, allowances, charges, priceDetails, vatInformation, itemInformation, subItems);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceLineItem {\n");
    
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    objectIdentifier: ").append(toIndentedString(objectIdentifier)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitCode: ").append(toIndentedString(unitCode)).append("\n");
    sb.append("    netAmount: ").append(toIndentedString(netAmount)).append("\n");
    sb.append("    purchaseOrderReference: ").append(toIndentedString(purchaseOrderReference)).append("\n");
    sb.append("    lineItemPeriod: ").append(toIndentedString(lineItemPeriod)).append("\n");
    sb.append("    allowances: ").append(toIndentedString(allowances)).append("\n");
    sb.append("    charges: ").append(toIndentedString(charges)).append("\n");
    sb.append("    priceDetails: ").append(toIndentedString(priceDetails)).append("\n");
    sb.append("    vatInformation: ").append(toIndentedString(vatInformation)).append("\n");
    sb.append("    itemInformation: ").append(toIndentedString(itemInformation)).append("\n");
    sb.append("    subItems: ").append(toIndentedString(subItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

