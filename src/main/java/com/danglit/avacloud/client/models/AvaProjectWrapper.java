/*
 * AVACloud API 1.59.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.59.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.danglit.avacloud.client.models.DeliveryInformation;
import com.danglit.avacloud.client.models.InvoiceAllowance;
import com.danglit.avacloud.client.models.InvoiceCharge;
import com.danglit.avacloud.client.models.InvoicePeriod;
import com.danglit.avacloud.client.models.InvoiceType;
import com.danglit.avacloud.client.models.Organization;
import com.danglit.avacloud.client.models.PaymentInstructions;
import com.danglit.avacloud.client.models.PreviousInvoice;
import com.danglit.avacloud.client.models.ProjectDto;
import com.danglit.avacloud.client.models.References;
import com.danglit.avacloud.client.models.SupportingDocument;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * This is a wrapper class that maps Dangl.AVA projects along with additional required information to create invoices
 */
@ApiModel(description = "This is a wrapper class that maps Dangl.AVA projects along with additional required information to create invoices")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-04-09T18:36:39.750Z")
public class AvaProjectWrapper {
  @SerializedName("project")
  private ProjectDto project = null;

  @SerializedName("invoiceNumber")
  private String invoiceNumber = null;

  @SerializedName("documents")
  private List<SupportingDocument> documents = null;

  @SerializedName("invoicePeriod")
  private InvoicePeriod invoicePeriod = null;

  @SerializedName("paymentInstructions")
  private PaymentInstructions paymentInstructions = null;

  @SerializedName("invoiceType")
  private InvoiceType invoiceType = null;

  @SerializedName("isEuReverseChargeInvoice")
  private Boolean isEuReverseChargeInvoice = null;

  @SerializedName("paymentDueDate")
  private OffsetDateTime paymentDueDate = null;

  @SerializedName("paymentTerms")
  private String paymentTerms = null;

  @SerializedName("previousInvoices")
  private List<PreviousInvoice> previousInvoices = null;

  @SerializedName("alreadyPaidTotalGross")
  private BigDecimal alreadyPaidTotalGross = null;

  @SerializedName("references")
  private References references = null;

  @SerializedName("allowances")
  private List<InvoiceAllowance> allowances = null;

  @SerializedName("charges")
  private List<InvoiceCharge> charges = null;

  @SerializedName("deliveryInformation")
  private DeliveryInformation deliveryInformation = null;

  @SerializedName("sellerTaxRepresentative")
  private Organization sellerTaxRepresentative = null;

  public AvaProjectWrapper project(ProjectDto project) {
    this.project = project;
    return this;
  }

   /**
   * The Dangl.AVA.Project from which to convert
   * @return project
  **/
  @ApiModelProperty(required = true, value = "The Dangl.AVA.Project from which to convert")
  public ProjectDto getProject() {
    return project;
  }

  public void setProject(ProjectDto project) {
    this.project = project;
  }

  public AvaProjectWrapper invoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

   /**
   * The number of the invoice
   * @return invoiceNumber
  **/
  @ApiModelProperty(value = "The number of the invoice")
  public String getInvoiceNumber() {
    return invoiceNumber;
  }

  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }

  public AvaProjectWrapper documents(List<SupportingDocument> documents) {
    this.documents = documents;
    return this;
  }

  public AvaProjectWrapper addDocumentsItem(SupportingDocument documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * Attached documents to the invoice
   * @return documents
  **/
  @ApiModelProperty(value = "Attached documents to the invoice")
  public List<SupportingDocument> getDocuments() {
    return documents;
  }

  public void setDocuments(List<SupportingDocument> documents) {
    this.documents = documents;
  }

  public AvaProjectWrapper invoicePeriod(InvoicePeriod invoicePeriod) {
    this.invoicePeriod = invoicePeriod;
    return this;
  }

   /**
   * The period during which the services or goods were delivered
   * @return invoicePeriod
  **/
  @ApiModelProperty(value = "The period during which the services or goods were delivered")
  public InvoicePeriod getInvoicePeriod() {
    return invoicePeriod;
  }

  public void setInvoicePeriod(InvoicePeriod invoicePeriod) {
    this.invoicePeriod = invoicePeriod;
  }

  public AvaProjectWrapper paymentInstructions(PaymentInstructions paymentInstructions) {
    this.paymentInstructions = paymentInstructions;
    return this;
  }

   /**
   * Instructions how to perform the payment
   * @return paymentInstructions
  **/
  @ApiModelProperty(value = "Instructions how to perform the payment")
  public PaymentInstructions getPaymentInstructions() {
    return paymentInstructions;
  }

  public void setPaymentInstructions(PaymentInstructions paymentInstructions) {
    this.paymentInstructions = paymentInstructions;
  }

  public AvaProjectWrapper invoiceType(InvoiceType invoiceType) {
    this.invoiceType = invoiceType;
    return this;
  }

   /**
   * The type of the invoice
   * @return invoiceType
  **/
  @ApiModelProperty(required = true, value = "The type of the invoice")
  public InvoiceType getInvoiceType() {
    return invoiceType;
  }

  public void setInvoiceType(InvoiceType invoiceType) {
    this.invoiceType = invoiceType;
  }

  public AvaProjectWrapper isEuReverseChargeInvoice(Boolean isEuReverseChargeInvoice) {
    this.isEuReverseChargeInvoice = isEuReverseChargeInvoice;
    return this;
  }

   /**
   * If this is set to true, the invoice will be marked as a reverse charge invoice in all VAT rates. You still need to ensure that the actual tax rates are set to zero in all elements
   * @return isEuReverseChargeInvoice
  **/
  @ApiModelProperty(required = true, value = "If this is set to true, the invoice will be marked as a reverse charge invoice in all VAT rates. You still need to ensure that the actual tax rates are set to zero in all elements")
  public Boolean isIsEuReverseChargeInvoice() {
    return isEuReverseChargeInvoice;
  }

  public void setIsEuReverseChargeInvoice(Boolean isEuReverseChargeInvoice) {
    this.isEuReverseChargeInvoice = isEuReverseChargeInvoice;
  }

  public AvaProjectWrapper paymentDueDate(OffsetDateTime paymentDueDate) {
    this.paymentDueDate = paymentDueDate;
    return this;
  }

   /**
   * Until when the payment is due
   * @return paymentDueDate
  **/
  @ApiModelProperty(value = "Until when the payment is due")
  public OffsetDateTime getPaymentDueDate() {
    return paymentDueDate;
  }

  public void setPaymentDueDate(OffsetDateTime paymentDueDate) {
    this.paymentDueDate = paymentDueDate;
  }

  public AvaProjectWrapper paymentTerms(String paymentTerms) {
    this.paymentTerms = paymentTerms;
    return this;
  }

   /**
   * A text description of payment terms, e.g. cash discounts or payment conditions
   * @return paymentTerms
  **/
  @ApiModelProperty(value = "A text description of payment terms, e.g. cash discounts or payment conditions")
  public String getPaymentTerms() {
    return paymentTerms;
  }

  public void setPaymentTerms(String paymentTerms) {
    this.paymentTerms = paymentTerms;
  }

  public AvaProjectWrapper previousInvoices(List<PreviousInvoice> previousInvoices) {
    this.previousInvoices = previousInvoices;
    return this;
  }

  public AvaProjectWrapper addPreviousInvoicesItem(PreviousInvoice previousInvoicesItem) {
    if (this.previousInvoices == null) {
      this.previousInvoices = new ArrayList<>();
    }
    this.previousInvoices.add(previousInvoicesItem);
    return this;
  }

   /**
   * In case of partial of final invoices, it&#39;s possible to reference the previous invoice numbers
   * @return previousInvoices
  **/
  @ApiModelProperty(value = "In case of partial of final invoices, it's possible to reference the previous invoice numbers")
  public List<PreviousInvoice> getPreviousInvoices() {
    return previousInvoices;
  }

  public void setPreviousInvoices(List<PreviousInvoice> previousInvoices) {
    this.previousInvoices = previousInvoices;
  }

  public AvaProjectWrapper alreadyPaidTotalGross(BigDecimal alreadyPaidTotalGross) {
    this.alreadyPaidTotalGross = alreadyPaidTotalGross;
    return this;
  }

   /**
   * If parts of this invoice (or of previous invoices) have already been paid, then this property can be used to specify that some parts of the invoice are already paid and this will be deducted from the to be paid amount.
   * @return alreadyPaidTotalGross
  **/
  @ApiModelProperty(required = true, value = "If parts of this invoice (or of previous invoices) have already been paid, then this property can be used to specify that some parts of the invoice are already paid and this will be deducted from the to be paid amount.")
  public BigDecimal getAlreadyPaidTotalGross() {
    return alreadyPaidTotalGross;
  }

  public void setAlreadyPaidTotalGross(BigDecimal alreadyPaidTotalGross) {
    this.alreadyPaidTotalGross = alreadyPaidTotalGross;
  }

  public AvaProjectWrapper references(References references) {
    this.references = references;
    return this;
  }

   /**
   * An object holding reference used in this invoice
   * @return references
  **/
  @ApiModelProperty(value = "An object holding reference used in this invoice")
  public References getReferences() {
    return references;
  }

  public void setReferences(References references) {
    this.references = references;
  }

  public AvaProjectWrapper allowances(List<InvoiceAllowance> allowances) {
    this.allowances = allowances;
    return this;
  }

  public AvaProjectWrapper addAllowancesItem(InvoiceAllowance allowancesItem) {
    if (this.allowances == null) {
      this.allowances = new ArrayList<>();
    }
    this.allowances.add(allowancesItem);
    return this;
  }

   /**
   * Optional document level allowances. For example, those can be used to supply global discounts e.g. for security deposits. When using this property, please pay attention that a deduction factor on the exported ServiceSpecification will also be exported as an allowance, in this case the total price of the invoice might be different from the total price of the ServiceSpecification.
   * @return allowances
  **/
  @ApiModelProperty(value = "Optional document level allowances. For example, those can be used to supply global discounts e.g. for security deposits. When using this property, please pay attention that a deduction factor on the exported ServiceSpecification will also be exported as an allowance, in this case the total price of the invoice might be different from the total price of the ServiceSpecification.")
  public List<InvoiceAllowance> getAllowances() {
    return allowances;
  }

  public void setAllowances(List<InvoiceAllowance> allowances) {
    this.allowances = allowances;
  }

  public AvaProjectWrapper charges(List<InvoiceCharge> charges) {
    this.charges = charges;
    return this;
  }

  public AvaProjectWrapper addChargesItem(InvoiceCharge chargesItem) {
    if (this.charges == null) {
      this.charges = new ArrayList<>();
    }
    this.charges.add(chargesItem);
    return this;
  }

   /**
   * Optional document level charges, e.g. for shipping or handling. When using this property, please pay attention that the charges given here will be applied to the already calculated total price of the ServiceSpecification, in this case the total price of the invoice might be different from the total price of the ServiceSpecification.
   * @return charges
  **/
  @ApiModelProperty(value = "Optional document level charges, e.g. for shipping or handling. When using this property, please pay attention that the charges given here will be applied to the already calculated total price of the ServiceSpecification, in this case the total price of the invoice might be different from the total price of the ServiceSpecification.")
  public List<InvoiceCharge> getCharges() {
    return charges;
  }

  public void setCharges(List<InvoiceCharge> charges) {
    this.charges = charges;
  }

  public AvaProjectWrapper deliveryInformation(DeliveryInformation deliveryInformation) {
    this.deliveryInformation = deliveryInformation;
    return this;
  }

   /**
   * Information about the delivery BG-13 in XRechnung
   * @return deliveryInformation
  **/
  @ApiModelProperty(value = "Information about the delivery BG-13 in XRechnung")
  public DeliveryInformation getDeliveryInformation() {
    return deliveryInformation;
  }

  public void setDeliveryInformation(DeliveryInformation deliveryInformation) {
    this.deliveryInformation = deliveryInformation;
  }

  public AvaProjectWrapper sellerTaxRepresentative(Organization sellerTaxRepresentative) {
    this.sellerTaxRepresentative = sellerTaxRepresentative;
    return this;
  }

   /**
   * Information about the sellers tax representative. BG-11 in XRechnung
   * @return sellerTaxRepresentative
  **/
  @ApiModelProperty(value = "Information about the sellers tax representative. BG-11 in XRechnung")
  public Organization getSellerTaxRepresentative() {
    return sellerTaxRepresentative;
  }

  public void setSellerTaxRepresentative(Organization sellerTaxRepresentative) {
    this.sellerTaxRepresentative = sellerTaxRepresentative;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvaProjectWrapper avaProjectWrapper = (AvaProjectWrapper) o;
    return Objects.equals(this.project, avaProjectWrapper.project) &&
        Objects.equals(this.invoiceNumber, avaProjectWrapper.invoiceNumber) &&
        Objects.equals(this.documents, avaProjectWrapper.documents) &&
        Objects.equals(this.invoicePeriod, avaProjectWrapper.invoicePeriod) &&
        Objects.equals(this.paymentInstructions, avaProjectWrapper.paymentInstructions) &&
        Objects.equals(this.invoiceType, avaProjectWrapper.invoiceType) &&
        Objects.equals(this.isEuReverseChargeInvoice, avaProjectWrapper.isEuReverseChargeInvoice) &&
        Objects.equals(this.paymentDueDate, avaProjectWrapper.paymentDueDate) &&
        Objects.equals(this.paymentTerms, avaProjectWrapper.paymentTerms) &&
        Objects.equals(this.previousInvoices, avaProjectWrapper.previousInvoices) &&
        Objects.equals(this.alreadyPaidTotalGross, avaProjectWrapper.alreadyPaidTotalGross) &&
        Objects.equals(this.references, avaProjectWrapper.references) &&
        Objects.equals(this.allowances, avaProjectWrapper.allowances) &&
        Objects.equals(this.charges, avaProjectWrapper.charges) &&
        Objects.equals(this.deliveryInformation, avaProjectWrapper.deliveryInformation) &&
        Objects.equals(this.sellerTaxRepresentative, avaProjectWrapper.sellerTaxRepresentative);
  }

  @Override
  public int hashCode() {
    return Objects.hash(project, invoiceNumber, documents, invoicePeriod, paymentInstructions, invoiceType, isEuReverseChargeInvoice, paymentDueDate, paymentTerms, previousInvoices, alreadyPaidTotalGross, references, allowances, charges, deliveryInformation, sellerTaxRepresentative);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvaProjectWrapper {\n");
    
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    invoicePeriod: ").append(toIndentedString(invoicePeriod)).append("\n");
    sb.append("    paymentInstructions: ").append(toIndentedString(paymentInstructions)).append("\n");
    sb.append("    invoiceType: ").append(toIndentedString(invoiceType)).append("\n");
    sb.append("    isEuReverseChargeInvoice: ").append(toIndentedString(isEuReverseChargeInvoice)).append("\n");
    sb.append("    paymentDueDate: ").append(toIndentedString(paymentDueDate)).append("\n");
    sb.append("    paymentTerms: ").append(toIndentedString(paymentTerms)).append("\n");
    sb.append("    previousInvoices: ").append(toIndentedString(previousInvoices)).append("\n");
    sb.append("    alreadyPaidTotalGross: ").append(toIndentedString(alreadyPaidTotalGross)).append("\n");
    sb.append("    references: ").append(toIndentedString(references)).append("\n");
    sb.append("    allowances: ").append(toIndentedString(allowances)).append("\n");
    sb.append("    charges: ").append(toIndentedString(charges)).append("\n");
    sb.append("    deliveryInformation: ").append(toIndentedString(deliveryInformation)).append("\n");
    sb.append("    sellerTaxRepresentative: ").append(toIndentedString(sellerTaxRepresentative)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

