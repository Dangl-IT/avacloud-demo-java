/*
 * AVACloud API 1.41.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.41.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.danglit.avacloud.client.models.AddendumStatusDto;
import com.danglit.avacloud.client.models.CatalogueDto;
import com.danglit.avacloud.client.models.CatalogueReferenceDto;
import com.danglit.avacloud.client.models.ExchangePhaseDto;
import com.danglit.avacloud.client.models.GrossPriceComponentDto;
import com.danglit.avacloud.client.models.IElementDto;
import com.danglit.avacloud.client.models.ItemNumberSchemaDto;
import com.danglit.avacloud.client.models.OriginDto;
import com.danglit.avacloud.client.models.PartyInformationDto;
import com.danglit.avacloud.client.models.PriceInformationDto;
import com.danglit.avacloud.client.models.PriceTypeDto;
import com.danglit.avacloud.client.models.ProjectInformationDto;
import com.danglit.avacloud.client.models.ServiceSpecificationCommercePropertiesDto;
import com.danglit.avacloud.client.models.WarrantyDurationDto;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * This is the base class that holds information about a whole service specification.
 */
@ApiModel(description = "This is the base class that holds information about a whole service specification.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-05-04T13:13:59.221Z")
public class ServiceSpecificationDto {
  @SerializedName("id")
  private String id = null;

  @SerializedName("projectHourlyWage")
  private BigDecimal projectHourlyWage = null;

  @SerializedName("projectTaxRate")
  private BigDecimal projectTaxRate = null;

  @SerializedName("projectPriceComponents")
  private List<String> projectPriceComponents = null;

  @SerializedName("projectItemNumberSchema")
  private ItemNumberSchemaDto projectItemNumberSchema = null;

  @SerializedName("elements")
  private List<IElementDto> elements = null;

  @SerializedName("projectLabourTimeLabel")
  private String projectLabourTimeLabel = null;

  @SerializedName("containsDuplicateItemNumbers")
  private Boolean containsDuplicateItemNumbers = null;

  @SerializedName("containsDuplicateElementIds")
  private Boolean containsDuplicateElementIds = null;

  @SerializedName("ignoreDuplicateItemNumbers")
  private Boolean ignoreDuplicateItemNumbers = null;

  @SerializedName("ignoreDuplicateElementIds")
  private Boolean ignoreDuplicateElementIds = null;

  @SerializedName("totalPriceGrossByTaxRate")
  private List<GrossPriceComponentDto> totalPriceGrossByTaxRate = null;

  @SerializedName("ignoreChildPriceUpdates")
  private Boolean ignoreChildPriceUpdates = null;

  @SerializedName("deductedPrice")
  private BigDecimal deductedPrice = null;

  @SerializedName("deductionFactor")
  private BigDecimal deductionFactor = null;

  @SerializedName("absoluteDeduction")
  private BigDecimal absoluteDeduction = null;

  @SerializedName("totalPrice")
  private BigDecimal totalPrice = null;

  @SerializedName("totalPriceGross")
  private BigDecimal totalPriceGross = null;

  @SerializedName("totalPriceGrossDeducted")
  private BigDecimal totalPriceGrossDeducted = null;

  @SerializedName("priceType")
  private PriceTypeDto priceType = null;

  @SerializedName("bidder")
  private PartyInformationDto bidder = null;

  @SerializedName("bidderDiscriminator")
  private String bidderDiscriminator = null;

  @SerializedName("gaebXmlId")
  private String gaebXmlId = null;

  @SerializedName("projectInformation")
  private ProjectInformationDto projectInformation = null;

  @SerializedName("exchangePhase")
  private ExchangePhaseDto exchangePhase = null;

  @SerializedName("origin")
  private OriginDto origin = null;

  @SerializedName("originDetail")
  private String originDetail = null;

  @SerializedName("creationDate")
  private OffsetDateTime creationDate = null;

  @SerializedName("offerByDate")
  private OffsetDateTime offerByDate = null;

  @SerializedName("decisionDate")
  private OffsetDateTime decisionDate = null;

  @SerializedName("bidDate")
  private OffsetDateTime bidDate = null;

  @SerializedName("warrantyBondPercentage")
  private BigDecimal warrantyBondPercentage = null;

  @SerializedName("executionGuaranteePercentage")
  private BigDecimal executionGuaranteePercentage = null;

  @SerializedName("submissionLocation")
  private String submissionLocation = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("priceInformation")
  private PriceInformationDto priceInformation = null;

  @SerializedName("projectCatalogues")
  private List<CatalogueDto> projectCatalogues = null;

  @SerializedName("catalogueReferences")
  private List<CatalogueReferenceDto> catalogueReferences = null;

  @SerializedName("plannedExecutionStart")
  private OffsetDateTime plannedExecutionStart = null;

  @SerializedName("plannedExecutionEnd")
  private OffsetDateTime plannedExecutionEnd = null;

  @SerializedName("contractDate")
  private OffsetDateTime contractDate = null;

  @SerializedName("contractIdentifier")
  private String contractIdentifier = null;

  @SerializedName("warrantyDuration")
  private WarrantyDurationDto warrantyDuration = null;

  @SerializedName("warrantyEnd")
  private OffsetDateTime warrantyEnd = null;

  @SerializedName("approvalDate")
  private OffsetDateTime approvalDate = null;

  @SerializedName("typeOfApproval")
  private String typeOfApproval = null;

  @SerializedName("addendumNumber")
  private String addendumNumber = null;

  @SerializedName("addendumStatus")
  private AddendumStatusDto addendumStatus = null;

  @SerializedName("commerceProperties")
  private ServiceSpecificationCommercePropertiesDto commerceProperties = null;

  public ServiceSpecificationDto id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Elements GUID identifier.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Elements GUID identifier.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

   /**
   * The hourly wage that is used within this ElementContainerBase. Will be propagated to child elements.
   * @return projectHourlyWage
  **/
  @ApiModelProperty(required = true, value = "The hourly wage that is used within this ElementContainerBase. Will be propagated to child elements.")
  public BigDecimal getProjectHourlyWage() {
    return projectHourlyWage;
  }

  public ServiceSpecificationDto projectTaxRate(BigDecimal projectTaxRate) {
    this.projectTaxRate = projectTaxRate;
    return this;
  }

   /**
   * The tax rate that is used within this ElementContainerBase. Will be propagated to child elements.
   * @return projectTaxRate
  **/
  @ApiModelProperty(required = true, value = "The tax rate that is used within this ElementContainerBase. Will be propagated to child elements.")
  public BigDecimal getProjectTaxRate() {
    return projectTaxRate;
  }

  public void setProjectTaxRate(BigDecimal projectTaxRate) {
    this.projectTaxRate = projectTaxRate;
  }

  public ServiceSpecificationDto projectPriceComponents(List<String> projectPriceComponents) {
    this.projectPriceComponents = projectPriceComponents;
    return this;
  }

  public ServiceSpecificationDto addProjectPriceComponentsItem(String projectPriceComponentsItem) {
    if (this.projectPriceComponents == null) {
      this.projectPriceComponents = new ArrayList<>();
    }
    this.projectPriceComponents.add(projectPriceComponentsItem);
    return this;
  }

   /**
   * The price components that are used within this project. They are ignored during Json deserialization because they will be set from the parent project.
   * @return projectPriceComponents
  **/
  @ApiModelProperty(value = "The price components that are used within this project. They are ignored during Json deserialization because they will be set from the parent project.")
  public List<String> getProjectPriceComponents() {
    return projectPriceComponents;
  }

  public void setProjectPriceComponents(List<String> projectPriceComponents) {
    this.projectPriceComponents = projectPriceComponents;
  }

  public ServiceSpecificationDto projectItemNumberSchema(ItemNumberSchemaDto projectItemNumberSchema) {
    this.projectItemNumberSchema = projectItemNumberSchema;
    return this;
  }

   /**
   * The ItemNumberSchema that is used within this project.
   * @return projectItemNumberSchema
  **/
  @ApiModelProperty(value = "The ItemNumberSchema that is used within this project.")
  public ItemNumberSchemaDto getProjectItemNumberSchema() {
    return projectItemNumberSchema;
  }

  public void setProjectItemNumberSchema(ItemNumberSchemaDto projectItemNumberSchema) {
    this.projectItemNumberSchema = projectItemNumberSchema;
  }

  public ServiceSpecificationDto elements(List<IElementDto> elements) {
    this.elements = elements;
    return this;
  }

  public ServiceSpecificationDto addElementsItem(IElementDto elementsItem) {
    if (this.elements == null) {
      this.elements = new ArrayList<>();
    }
    this.elements.add(elementsItem);
    return this;
  }

   /**
   * The IElements within this ElementContainerBase.
   * @return elements
  **/
  @ApiModelProperty(value = "The IElements within this ElementContainerBase.")
  public List<IElementDto> getElements() {
    return elements;
  }

  public void setElements(List<IElementDto> elements) {
    this.elements = elements;
  }

   /**
   * The label used in the parent Project to mark labour time, e.g. \&quot;Hours\&quot; or \&quot;Stunden\&quot;.
   * @return projectLabourTimeLabel
  **/
  @ApiModelProperty(value = "The label used in the parent Project to mark labour time, e.g. \"Hours\" or \"Stunden\".")
  public String getProjectLabourTimeLabel() {
    return projectLabourTimeLabel;
  }

   /**
   * Indicates if there are child IElements that have conflicting, duplicated ItemNumbers or if any child ElementContainerBase elements themselves contain duplicate ItemNumber s. Will always indicate false when told to ignore duplicate item numbers.
   * @return containsDuplicateItemNumbers
  **/
  @ApiModelProperty(required = true, value = "Indicates if there are child IElements that have conflicting, duplicated ItemNumbers or if any child ElementContainerBase elements themselves contain duplicate ItemNumber s. Will always indicate false when told to ignore duplicate item numbers.")
  public Boolean isContainsDuplicateItemNumbers() {
    return containsDuplicateItemNumbers;
  }

   /**
   * Indicates if there are child IElements that have conflicting, duplicated Ids or if any child ElementContainerBase elements themselves contain duplicate Id s. Will always indicate false when told to ignore duplicate item numbers.
   * @return containsDuplicateElementIds
  **/
  @ApiModelProperty(required = true, value = "Indicates if there are child IElements that have conflicting, duplicated Ids or if any child ElementContainerBase elements themselves contain duplicate Id s. Will always indicate false when told to ignore duplicate item numbers.")
  public Boolean isContainsDuplicateElementIds() {
    return containsDuplicateElementIds;
  }

  public ServiceSpecificationDto ignoreDuplicateItemNumbers(Boolean ignoreDuplicateItemNumbers) {
    this.ignoreDuplicateItemNumbers = ignoreDuplicateItemNumbers;
    return this;
  }

   /**
   * Indicate if duplicated ItemNumbers within child elements are to be ignored. Will not perform checks for duplicates if yes.
   * @return ignoreDuplicateItemNumbers
  **/
  @ApiModelProperty(required = true, value = "Indicate if duplicated ItemNumbers within child elements are to be ignored. Will not perform checks for duplicates if yes.")
  public Boolean isIgnoreDuplicateItemNumbers() {
    return ignoreDuplicateItemNumbers;
  }

  public void setIgnoreDuplicateItemNumbers(Boolean ignoreDuplicateItemNumbers) {
    this.ignoreDuplicateItemNumbers = ignoreDuplicateItemNumbers;
  }

  public ServiceSpecificationDto ignoreDuplicateElementIds(Boolean ignoreDuplicateElementIds) {
    this.ignoreDuplicateElementIds = ignoreDuplicateElementIds;
    return this;
  }

   /**
   * Indicate if duplicated Ids within child elements are to be ignored. Will not perform checks for duplicates if yes.
   * @return ignoreDuplicateElementIds
  **/
  @ApiModelProperty(required = true, value = "Indicate if duplicated Ids within child elements are to be ignored. Will not perform checks for duplicates if yes.")
  public Boolean isIgnoreDuplicateElementIds() {
    return ignoreDuplicateElementIds;
  }

  public void setIgnoreDuplicateElementIds(Boolean ignoreDuplicateElementIds) {
    this.ignoreDuplicateElementIds = ignoreDuplicateElementIds;
  }

  public ServiceSpecificationDto totalPriceGrossByTaxRate(List<GrossPriceComponentDto> totalPriceGrossByTaxRate) {
    this.totalPriceGrossByTaxRate = totalPriceGrossByTaxRate;
    return this;
  }

  public ServiceSpecificationDto addTotalPriceGrossByTaxRateItem(GrossPriceComponentDto totalPriceGrossByTaxRateItem) {
    if (this.totalPriceGrossByTaxRate == null) {
      this.totalPriceGrossByTaxRate = new ArrayList<>();
    }
    this.totalPriceGrossByTaxRate.add(totalPriceGrossByTaxRateItem);
    return this;
  }

   /**
   * Price composition by tax rate.
   * @return totalPriceGrossByTaxRate
  **/
  @ApiModelProperty(value = "Price composition by tax rate.")
  public List<GrossPriceComponentDto> getTotalPriceGrossByTaxRate() {
    return totalPriceGrossByTaxRate;
  }

  public void setTotalPriceGrossByTaxRate(List<GrossPriceComponentDto> totalPriceGrossByTaxRate) {
    this.totalPriceGrossByTaxRate = totalPriceGrossByTaxRate;
  }

  public ServiceSpecificationDto ignoreChildPriceUpdates(Boolean ignoreChildPriceUpdates) {
    this.ignoreChildPriceUpdates = ignoreChildPriceUpdates;
    return this;
  }

   /**
   * Internally used to indicate that a propagation is currently done, this is done to not recalculate every single result from a lot of changes when it is sufficient to calculate the total price at once.
   * @return ignoreChildPriceUpdates
  **/
  @ApiModelProperty(required = true, value = "Internally used to indicate that a propagation is currently done, this is done to not recalculate every single result from a lot of changes when it is sufficient to calculate the total price at once.")
  public Boolean isIgnoreChildPriceUpdates() {
    return ignoreChildPriceUpdates;
  }

  public void setIgnoreChildPriceUpdates(Boolean ignoreChildPriceUpdates) {
    this.ignoreChildPriceUpdates = ignoreChildPriceUpdates;
  }

   /**
   * Net price after applied deductions.
   * @return deductedPrice
  **/
  @ApiModelProperty(required = true, value = "Net price after applied deductions.")
  public BigDecimal getDeductedPrice() {
    return deductedPrice;
  }

  public ServiceSpecificationDto deductionFactor(BigDecimal deductionFactor) {
    this.deductionFactor = deductionFactor;
    return this;
  }

   /**
   * Factor of applied deductions to the total price. For example, \&quot;0.03\&quot; means that a 3% deduction is to be applied.
   * @return deductionFactor
  **/
  @ApiModelProperty(required = true, value = "Factor of applied deductions to the total price. For example, \"0.03\" means that a 3% deduction is to be applied.")
  public BigDecimal getDeductionFactor() {
    return deductionFactor;
  }

  public void setDeductionFactor(BigDecimal deductionFactor) {
    this.deductionFactor = deductionFactor;
  }

  public ServiceSpecificationDto absoluteDeduction(BigDecimal absoluteDeduction) {
    this.absoluteDeduction = absoluteDeduction;
    return this;
  }

   /**
   * The exact amount of the discount as an absolute value. For backwards compatibility reasons, setting this value will also set a calculated value to DeductionFactor, which will also be updated in case the total price is changed to reflect a relative value of the absolute discount sum.
   * @return absoluteDeduction
  **/
  @ApiModelProperty(value = "The exact amount of the discount as an absolute value. For backwards compatibility reasons, setting this value will also set a calculated value to DeductionFactor, which will also be updated in case the total price is changed to reflect a relative value of the absolute discount sum.")
  public BigDecimal getAbsoluteDeduction() {
    return absoluteDeduction;
  }

  public void setAbsoluteDeduction(BigDecimal absoluteDeduction) {
    this.absoluteDeduction = absoluteDeduction;
  }

   /**
   * Will return this ElementContainerBase&#39;s total price.
   * @return totalPrice
  **/
  @ApiModelProperty(required = true, value = "Will return this ElementContainerBase's total price.")
  public BigDecimal getTotalPrice() {
    return totalPrice;
  }

   /**
   * The total gross price for this ElementContainerBase including all child elements.
   * @return totalPriceGross
  **/
  @ApiModelProperty(required = true, value = "The total gross price for this ElementContainerBase including all child elements.")
  public BigDecimal getTotalPriceGross() {
    return totalPriceGross;
  }

   /**
   * Total gross price after applied deductions.
   * @return totalPriceGrossDeducted
  **/
  @ApiModelProperty(required = true, value = "Total gross price after applied deductions.")
  public BigDecimal getTotalPriceGrossDeducted() {
    return totalPriceGrossDeducted;
  }

  public ServiceSpecificationDto priceType(PriceTypeDto priceType) {
    this.priceType = priceType;
    return this;
  }

   /**
   * Indicates the PriceType of this ElementContainerBase, whether it should factor into total costs or not.
   * @return priceType
  **/
  @ApiModelProperty(required = true, value = "Indicates the PriceType of this ElementContainerBase, whether it should factor into total costs or not.")
  public PriceTypeDto getPriceType() {
    return priceType;
  }

  public void setPriceType(PriceTypeDto priceType) {
    this.priceType = priceType;
  }

  public ServiceSpecificationDto bidder(PartyInformationDto bidder) {
    this.bidder = bidder;
    return this;
  }

   /**
   * Information about the bidder.
   * @return bidder
  **/
  @ApiModelProperty(value = "Information about the bidder.")
  public PartyInformationDto getBidder() {
    return bidder;
  }

  public void setBidder(PartyInformationDto bidder) {
    this.bidder = bidder;
  }

  public ServiceSpecificationDto bidderDiscriminator(String bidderDiscriminator) {
    this.bidderDiscriminator = bidderDiscriminator;
    return this;
  }

   /**
   * This discriminator is used to identify different bidders in a project. It is different from the Identifier property in the Bidder in that the BidderDiscriminator is intended to be a numerical identifier within a project, while the Identifier does uniquely identify a bidder in the system independent of a specific project. This property should map to \&quot;Bieternummer\&quot; or \&quot;BidderNo\&quot; in GAEB.
   * @return bidderDiscriminator
  **/
  @ApiModelProperty(value = "This discriminator is used to identify different bidders in a project. It is different from the Identifier property in the Bidder in that the BidderDiscriminator is intended to be a numerical identifier within a project, while the Identifier does uniquely identify a bidder in the system independent of a specific project. This property should map to \"Bieternummer\" or \"BidderNo\" in GAEB.")
  public String getBidderDiscriminator() {
    return bidderDiscriminator;
  }

  public void setBidderDiscriminator(String bidderDiscriminator) {
    this.bidderDiscriminator = bidderDiscriminator;
  }

  public ServiceSpecificationDto gaebXmlId(String gaebXmlId) {
    this.gaebXmlId = gaebXmlId;
    return this;
  }

   /**
   * This is used to store the GAEB XML Id within this ServiceSpecification. This data is not used for any calculations or evaluations but only for GAEB serialization and deserialization.
   * @return gaebXmlId
  **/
  @ApiModelProperty(value = "This is used to store the GAEB XML Id within this ServiceSpecification. This data is not used for any calculations or evaluations but only for GAEB serialization and deserialization.")
  public String getGaebXmlId() {
    return gaebXmlId;
  }

  public void setGaebXmlId(String gaebXmlId) {
    this.gaebXmlId = gaebXmlId;
  }

   /**
   * The ProjectInformation used within the Project in which this ElementContainerBase is contained. This is reference equal to the ProjectInformation used in the parent project.
   * @return projectInformation
  **/
  @ApiModelProperty(value = "The ProjectInformation used within the Project in which this ElementContainerBase is contained. This is reference equal to the ProjectInformation used in the parent project.")
  public ProjectInformationDto getProjectInformation() {
    return projectInformation;
  }

  public ServiceSpecificationDto exchangePhase(ExchangePhaseDto exchangePhase) {
    this.exchangePhase = exchangePhase;
    return this;
  }

   /**
   * This service specifications exchange phase, i.e. the current status in the project it is intended to be used (such as request for offer, offer, awarding...).
   * @return exchangePhase
  **/
  @ApiModelProperty(required = true, value = "This service specifications exchange phase, i.e. the current status in the project it is intended to be used (such as request for offer, offer, awarding...).")
  public ExchangePhaseDto getExchangePhase() {
    return exchangePhase;
  }

  public void setExchangePhase(ExchangePhaseDto exchangePhase) {
    this.exchangePhase = exchangePhase;
  }

  public ServiceSpecificationDto origin(OriginDto origin) {
    this.origin = origin;
    return this;
  }

   /**
   * This indicates where the service specification originates, i.e. from an exchange file format or self created. If applicable, additional information is present in the OriginDetail property.
   * @return origin
  **/
  @ApiModelProperty(required = true, value = "This indicates where the service specification originates, i.e. from an exchange file format or self created. If applicable, additional information is present in the OriginDetail property.")
  public OriginDto getOrigin() {
    return origin;
  }

  public void setOrigin(OriginDto origin) {
    this.origin = origin;
  }

  public ServiceSpecificationDto originDetail(String originDetail) {
    this.originDetail = originDetail;
    return this;
  }

   /**
   * This property complements the Origin property. Some formats, e.g. GaebXml might have additional information attached, e.g. GAEB XML V3.2 oder GAEB XML V3.1. This string property is used to hold such data. The Dangl.AVA module does not have a list of possible values, since this is defined in the native format assemblies, e.g. Dangl.GAEB or Dangl.Oenorm.
   * @return originDetail
  **/
  @ApiModelProperty(value = "This property complements the Origin property. Some formats, e.g. GaebXml might have additional information attached, e.g. GAEB XML V3.2 oder GAEB XML V3.1. This string property is used to hold such data. The Dangl.AVA module does not have a list of possible values, since this is defined in the native format assemblies, e.g. Dangl.GAEB or Dangl.Oenorm.")
  public String getOriginDetail() {
    return originDetail;
  }

  public void setOriginDetail(String originDetail) {
    this.originDetail = originDetail;
  }

  public ServiceSpecificationDto creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Creation date of this ServiceSpecification.
   * @return creationDate
  **/
  @ApiModelProperty(value = "Creation date of this ServiceSpecification.")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public ServiceSpecificationDto offerByDate(OffsetDateTime offerByDate) {
    this.offerByDate = offerByDate;
    return this;
  }

   /**
   * Date indicating until when an offer has to be submitted. In German, this is often called the \&quot;Eröffnungstermin\&quot;
   * @return offerByDate
  **/
  @ApiModelProperty(value = "Date indicating until when an offer has to be submitted. In German, this is often called the \"Eröffnungstermin\"")
  public OffsetDateTime getOfferByDate() {
    return offerByDate;
  }

  public void setOfferByDate(OffsetDateTime offerByDate) {
    this.offerByDate = offerByDate;
  }

  public ServiceSpecificationDto decisionDate(OffsetDateTime decisionDate) {
    this.decisionDate = decisionDate;
    return this;
  }

   /**
   * Date indicating by when the buyer will select a contractor.
   * @return decisionDate
  **/
  @ApiModelProperty(value = "Date indicating by when the buyer will select a contractor.")
  public OffsetDateTime getDecisionDate() {
    return decisionDate;
  }

  public void setDecisionDate(OffsetDateTime decisionDate) {
    this.decisionDate = decisionDate;
  }

  public ServiceSpecificationDto bidDate(OffsetDateTime bidDate) {
    this.bidDate = bidDate;
    return this;
  }

   /**
   * Date of when the offer / bid was created
   * @return bidDate
  **/
  @ApiModelProperty(value = "Date of when the offer / bid was created")
  public OffsetDateTime getBidDate() {
    return bidDate;
  }

  public void setBidDate(OffsetDateTime bidDate) {
    this.bidDate = bidDate;
  }

  public ServiceSpecificationDto warrantyBondPercentage(BigDecimal warrantyBondPercentage) {
    this.warrantyBondPercentage = warrantyBondPercentage;
    return this;
  }

   /**
   * If a construction project requires a warranty bond, this property indicates the amount as a percentage, e.g. &#39;0.15m&#39; means 15% of the construction total amount as a warranty bond.
   * @return warrantyBondPercentage
  **/
  @ApiModelProperty(required = true, value = "If a construction project requires a warranty bond, this property indicates the amount as a percentage, e.g. '0.15m' means 15% of the construction total amount as a warranty bond.")
  public BigDecimal getWarrantyBondPercentage() {
    return warrantyBondPercentage;
  }

  public void setWarrantyBondPercentage(BigDecimal warrantyBondPercentage) {
    this.warrantyBondPercentage = warrantyBondPercentage;
  }

  public ServiceSpecificationDto executionGuaranteePercentage(BigDecimal executionGuaranteePercentage) {
    this.executionGuaranteePercentage = executionGuaranteePercentage;
    return this;
  }

   /**
   * If a construction project requires an execution guarantty, this property indicates the amount as a percentage, e.g. &#39;0.15m&#39; means 15% of the construction total amount as an execution guarantee. In practice, this percentage is usually deducted from intermediate invoices and only billed in the final invoice.
   * @return executionGuaranteePercentage
  **/
  @ApiModelProperty(required = true, value = "If a construction project requires an execution guarantty, this property indicates the amount as a percentage, e.g. '0.15m' means 15% of the construction total amount as an execution guarantee. In practice, this percentage is usually deducted from intermediate invoices and only billed in the final invoice.")
  public BigDecimal getExecutionGuaranteePercentage() {
    return executionGuaranteePercentage;
  }

  public void setExecutionGuaranteePercentage(BigDecimal executionGuaranteePercentage) {
    this.executionGuaranteePercentage = executionGuaranteePercentage;
  }

  public ServiceSpecificationDto submissionLocation(String submissionLocation) {
    this.submissionLocation = submissionLocation;
    return this;
  }

   /**
   * String indicating where the physical submission of the offer is taking place.
   * @return submissionLocation
  **/
  @ApiModelProperty(value = "String indicating where the physical submission of the offer is taking place.")
  public String getSubmissionLocation() {
    return submissionLocation;
  }

  public void setSubmissionLocation(String submissionLocation) {
    this.submissionLocation = submissionLocation;
  }

  public ServiceSpecificationDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of this ServiceSpecification.
   * @return description
  **/
  @ApiModelProperty(value = "Description of this ServiceSpecification.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ServiceSpecificationDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of this ServiceSpecification.
   * @return name
  **/
  @ApiModelProperty(value = "The name of this ServiceSpecification.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ServiceSpecificationDto priceInformation(PriceInformationDto priceInformation) {
    this.priceInformation = priceInformation;
    return this;
  }

   /**
   * This PriceInformation contains global data for the ServiceSpecification. When inside a Project, do not set this property manually.
   * @return priceInformation
  **/
  @ApiModelProperty(value = "This PriceInformation contains global data for the ServiceSpecification. When inside a Project, do not set this property manually.")
  public PriceInformationDto getPriceInformation() {
    return priceInformation;
  }

  public void setPriceInformation(PriceInformationDto priceInformation) {
    this.priceInformation = priceInformation;
  }

  public ServiceSpecificationDto projectCatalogues(List<CatalogueDto> projectCatalogues) {
    this.projectCatalogues = projectCatalogues;
    return this;
  }

  public ServiceSpecificationDto addProjectCataloguesItem(CatalogueDto projectCataloguesItem) {
    if (this.projectCatalogues == null) {
      this.projectCatalogues = new ArrayList<>();
    }
    this.projectCatalogues.add(projectCataloguesItem);
    return this;
  }

   /**
   * These are Catalogue that are used within this ElementContainerBase. Catalogue references are used to describe catalogues, or collections, that can be used to describe elements with commonly known properties. For example, QuantityAssignments use these to categorize themselves.
   * @return projectCatalogues
  **/
  @ApiModelProperty(value = "These are Catalogue that are used within this ElementContainerBase. Catalogue references are used to describe catalogues, or collections, that can be used to describe elements with commonly known properties. For example, QuantityAssignments use these to categorize themselves.")
  public List<CatalogueDto> getProjectCatalogues() {
    return projectCatalogues;
  }

  public void setProjectCatalogues(List<CatalogueDto> projectCatalogues) {
    this.projectCatalogues = projectCatalogues;
  }

  public ServiceSpecificationDto catalogueReferences(List<CatalogueReferenceDto> catalogueReferences) {
    this.catalogueReferences = catalogueReferences;
    return this;
  }

  public ServiceSpecificationDto addCatalogueReferencesItem(CatalogueReferenceDto catalogueReferencesItem) {
    if (this.catalogueReferences == null) {
      this.catalogueReferences = new ArrayList<>();
    }
    this.catalogueReferences.add(catalogueReferencesItem);
    return this;
  }

   /**
   * Referenced catalogues for this ElementContainerBase.
   * @return catalogueReferences
  **/
  @ApiModelProperty(value = "Referenced catalogues for this ElementContainerBase.")
  public List<CatalogueReferenceDto> getCatalogueReferences() {
    return catalogueReferences;
  }

  public void setCatalogueReferences(List<CatalogueReferenceDto> catalogueReferences) {
    this.catalogueReferences = catalogueReferences;
  }

  public ServiceSpecificationDto plannedExecutionStart(OffsetDateTime plannedExecutionStart) {
    this.plannedExecutionStart = plannedExecutionStart;
    return this;
  }

   /**
   * The date when the execution of the services is scheduled to start
   * @return plannedExecutionStart
  **/
  @ApiModelProperty(value = "The date when the execution of the services is scheduled to start")
  public OffsetDateTime getPlannedExecutionStart() {
    return plannedExecutionStart;
  }

  public void setPlannedExecutionStart(OffsetDateTime plannedExecutionStart) {
    this.plannedExecutionStart = plannedExecutionStart;
  }

  public ServiceSpecificationDto plannedExecutionEnd(OffsetDateTime plannedExecutionEnd) {
    this.plannedExecutionEnd = plannedExecutionEnd;
    return this;
  }

   /**
   * The date then the execution of the services is scheduled to be finished
   * @return plannedExecutionEnd
  **/
  @ApiModelProperty(value = "The date then the execution of the services is scheduled to be finished")
  public OffsetDateTime getPlannedExecutionEnd() {
    return plannedExecutionEnd;
  }

  public void setPlannedExecutionEnd(OffsetDateTime plannedExecutionEnd) {
    this.plannedExecutionEnd = plannedExecutionEnd;
  }

  public ServiceSpecificationDto contractDate(OffsetDateTime contractDate) {
    this.contractDate = contractDate;
    return this;
  }

   /**
   * The date on which the contract has been awarded. This matches \&quot;Auftragsdatum\&quot; in GAEB
   * @return contractDate
  **/
  @ApiModelProperty(value = "The date on which the contract has been awarded. This matches \"Auftragsdatum\" in GAEB")
  public OffsetDateTime getContractDate() {
    return contractDate;
  }

  public void setContractDate(OffsetDateTime contractDate) {
    this.contractDate = contractDate;
  }

  public ServiceSpecificationDto contractIdentifier(String contractIdentifier) {
    this.contractIdentifier = contractIdentifier;
    return this;
  }

   /**
   * This value can be used to indicate the number or identifier of the contract. It matches \&quot;Auftragsnummer\&quot; in GAEB
   * @return contractIdentifier
  **/
  @ApiModelProperty(value = "This value can be used to indicate the number or identifier of the contract. It matches \"Auftragsnummer\" in GAEB")
  public String getContractIdentifier() {
    return contractIdentifier;
  }

  public void setContractIdentifier(String contractIdentifier) {
    this.contractIdentifier = contractIdentifier;
  }

  public ServiceSpecificationDto warrantyDuration(WarrantyDurationDto warrantyDuration) {
    this.warrantyDuration = warrantyDuration;
    return this;
  }

   /**
   * This indicates how long the warranty period is for this ServiceSpecification
   * @return warrantyDuration
  **/
  @ApiModelProperty(value = "This indicates how long the warranty period is for this ServiceSpecification")
  public WarrantyDurationDto getWarrantyDuration() {
    return warrantyDuration;
  }

  public void setWarrantyDuration(WarrantyDurationDto warrantyDuration) {
    this.warrantyDuration = warrantyDuration;
  }

  public ServiceSpecificationDto warrantyEnd(OffsetDateTime warrantyEnd) {
    this.warrantyEnd = warrantyEnd;
    return this;
  }

   /**
   * The date on which the warranty period ends
   * @return warrantyEnd
  **/
  @ApiModelProperty(value = "The date on which the warranty period ends")
  public OffsetDateTime getWarrantyEnd() {
    return warrantyEnd;
  }

  public void setWarrantyEnd(OffsetDateTime warrantyEnd) {
    this.warrantyEnd = warrantyEnd;
  }

  public ServiceSpecificationDto approvalDate(OffsetDateTime approvalDate) {
    this.approvalDate = approvalDate;
    return this;
  }

   /**
   * The date on which the services rendered by the bidder are scheduled to be approved by the buyer
   * @return approvalDate
  **/
  @ApiModelProperty(value = "The date on which the services rendered by the bidder are scheduled to be approved by the buyer")
  public OffsetDateTime getApprovalDate() {
    return approvalDate;
  }

  public void setApprovalDate(OffsetDateTime approvalDate) {
    this.approvalDate = approvalDate;
  }

  public ServiceSpecificationDto typeOfApproval(String typeOfApproval) {
    this.typeOfApproval = typeOfApproval;
    return this;
  }

   /**
   * This should specify how the approval is performed by the buyer. This matches \&quot;AcceptType\&quot; in GAEB
   * @return typeOfApproval
  **/
  @ApiModelProperty(value = "This should specify how the approval is performed by the buyer. This matches \"AcceptType\" in GAEB")
  public String getTypeOfApproval() {
    return typeOfApproval;
  }

  public void setTypeOfApproval(String typeOfApproval) {
    this.typeOfApproval = typeOfApproval;
  }

  public ServiceSpecificationDto addendumNumber(String addendumNumber) {
    this.addendumNumber = addendumNumber;
    return this;
  }

   /**
   * This optional string property is shared by all IElements, and indicates if the element is part of an addendum, a &#39;Nachtrag&#39; in German.
   * @return addendumNumber
  **/
  @ApiModelProperty(value = "This optional string property is shared by all IElements, and indicates if the element is part of an addendum, a 'Nachtrag' in German.")
  public String getAddendumNumber() {
    return addendumNumber;
  }

  public void setAddendumNumber(String addendumNumber) {
    this.addendumNumber = addendumNumber;
  }

  public ServiceSpecificationDto addendumStatus(AddendumStatusDto addendumStatus) {
    this.addendumStatus = addendumStatus;
    return this;
  }

   /**
   * This indicates, if this element is part of an addendum an, if yes, with what status.
   * @return addendumStatus
  **/
  @ApiModelProperty(value = "This indicates, if this element is part of an addendum an, if yes, with what status.")
  public AddendumStatusDto getAddendumStatus() {
    return addendumStatus;
  }

  public void setAddendumStatus(AddendumStatusDto addendumStatus) {
    this.addendumStatus = addendumStatus;
  }

  public ServiceSpecificationDto commerceProperties(ServiceSpecificationCommercePropertiesDto commerceProperties) {
    this.commerceProperties = commerceProperties;
    return this;
  }

   /**
   * This property holds additional information that&#39;s only valid in commerce exchange phases.
   * @return commerceProperties
  **/
  @ApiModelProperty(value = "This property holds additional information that's only valid in commerce exchange phases.")
  public ServiceSpecificationCommercePropertiesDto getCommerceProperties() {
    return commerceProperties;
  }

  public void setCommerceProperties(ServiceSpecificationCommercePropertiesDto commerceProperties) {
    this.commerceProperties = commerceProperties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceSpecificationDto serviceSpecificationDto = (ServiceSpecificationDto) o;
    return Objects.equals(this.id, serviceSpecificationDto.id) &&
        Objects.equals(this.projectHourlyWage, serviceSpecificationDto.projectHourlyWage) &&
        Objects.equals(this.projectTaxRate, serviceSpecificationDto.projectTaxRate) &&
        Objects.equals(this.projectPriceComponents, serviceSpecificationDto.projectPriceComponents) &&
        Objects.equals(this.projectItemNumberSchema, serviceSpecificationDto.projectItemNumberSchema) &&
        Objects.equals(this.elements, serviceSpecificationDto.elements) &&
        Objects.equals(this.projectLabourTimeLabel, serviceSpecificationDto.projectLabourTimeLabel) &&
        Objects.equals(this.containsDuplicateItemNumbers, serviceSpecificationDto.containsDuplicateItemNumbers) &&
        Objects.equals(this.containsDuplicateElementIds, serviceSpecificationDto.containsDuplicateElementIds) &&
        Objects.equals(this.ignoreDuplicateItemNumbers, serviceSpecificationDto.ignoreDuplicateItemNumbers) &&
        Objects.equals(this.ignoreDuplicateElementIds, serviceSpecificationDto.ignoreDuplicateElementIds) &&
        Objects.equals(this.totalPriceGrossByTaxRate, serviceSpecificationDto.totalPriceGrossByTaxRate) &&
        Objects.equals(this.ignoreChildPriceUpdates, serviceSpecificationDto.ignoreChildPriceUpdates) &&
        Objects.equals(this.deductedPrice, serviceSpecificationDto.deductedPrice) &&
        Objects.equals(this.deductionFactor, serviceSpecificationDto.deductionFactor) &&
        Objects.equals(this.absoluteDeduction, serviceSpecificationDto.absoluteDeduction) &&
        Objects.equals(this.totalPrice, serviceSpecificationDto.totalPrice) &&
        Objects.equals(this.totalPriceGross, serviceSpecificationDto.totalPriceGross) &&
        Objects.equals(this.totalPriceGrossDeducted, serviceSpecificationDto.totalPriceGrossDeducted) &&
        Objects.equals(this.priceType, serviceSpecificationDto.priceType) &&
        Objects.equals(this.bidder, serviceSpecificationDto.bidder) &&
        Objects.equals(this.bidderDiscriminator, serviceSpecificationDto.bidderDiscriminator) &&
        Objects.equals(this.gaebXmlId, serviceSpecificationDto.gaebXmlId) &&
        Objects.equals(this.projectInformation, serviceSpecificationDto.projectInformation) &&
        Objects.equals(this.exchangePhase, serviceSpecificationDto.exchangePhase) &&
        Objects.equals(this.origin, serviceSpecificationDto.origin) &&
        Objects.equals(this.originDetail, serviceSpecificationDto.originDetail) &&
        Objects.equals(this.creationDate, serviceSpecificationDto.creationDate) &&
        Objects.equals(this.offerByDate, serviceSpecificationDto.offerByDate) &&
        Objects.equals(this.decisionDate, serviceSpecificationDto.decisionDate) &&
        Objects.equals(this.bidDate, serviceSpecificationDto.bidDate) &&
        Objects.equals(this.warrantyBondPercentage, serviceSpecificationDto.warrantyBondPercentage) &&
        Objects.equals(this.executionGuaranteePercentage, serviceSpecificationDto.executionGuaranteePercentage) &&
        Objects.equals(this.submissionLocation, serviceSpecificationDto.submissionLocation) &&
        Objects.equals(this.description, serviceSpecificationDto.description) &&
        Objects.equals(this.name, serviceSpecificationDto.name) &&
        Objects.equals(this.priceInformation, serviceSpecificationDto.priceInformation) &&
        Objects.equals(this.projectCatalogues, serviceSpecificationDto.projectCatalogues) &&
        Objects.equals(this.catalogueReferences, serviceSpecificationDto.catalogueReferences) &&
        Objects.equals(this.plannedExecutionStart, serviceSpecificationDto.plannedExecutionStart) &&
        Objects.equals(this.plannedExecutionEnd, serviceSpecificationDto.plannedExecutionEnd) &&
        Objects.equals(this.contractDate, serviceSpecificationDto.contractDate) &&
        Objects.equals(this.contractIdentifier, serviceSpecificationDto.contractIdentifier) &&
        Objects.equals(this.warrantyDuration, serviceSpecificationDto.warrantyDuration) &&
        Objects.equals(this.warrantyEnd, serviceSpecificationDto.warrantyEnd) &&
        Objects.equals(this.approvalDate, serviceSpecificationDto.approvalDate) &&
        Objects.equals(this.typeOfApproval, serviceSpecificationDto.typeOfApproval) &&
        Objects.equals(this.addendumNumber, serviceSpecificationDto.addendumNumber) &&
        Objects.equals(this.addendumStatus, serviceSpecificationDto.addendumStatus) &&
        Objects.equals(this.commerceProperties, serviceSpecificationDto.commerceProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, projectHourlyWage, projectTaxRate, projectPriceComponents, projectItemNumberSchema, elements, projectLabourTimeLabel, containsDuplicateItemNumbers, containsDuplicateElementIds, ignoreDuplicateItemNumbers, ignoreDuplicateElementIds, totalPriceGrossByTaxRate, ignoreChildPriceUpdates, deductedPrice, deductionFactor, absoluteDeduction, totalPrice, totalPriceGross, totalPriceGrossDeducted, priceType, bidder, bidderDiscriminator, gaebXmlId, projectInformation, exchangePhase, origin, originDetail, creationDate, offerByDate, decisionDate, bidDate, warrantyBondPercentage, executionGuaranteePercentage, submissionLocation, description, name, priceInformation, projectCatalogues, catalogueReferences, plannedExecutionStart, plannedExecutionEnd, contractDate, contractIdentifier, warrantyDuration, warrantyEnd, approvalDate, typeOfApproval, addendumNumber, addendumStatus, commerceProperties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceSpecificationDto {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    projectHourlyWage: ").append(toIndentedString(projectHourlyWage)).append("\n");
    sb.append("    projectTaxRate: ").append(toIndentedString(projectTaxRate)).append("\n");
    sb.append("    projectPriceComponents: ").append(toIndentedString(projectPriceComponents)).append("\n");
    sb.append("    projectItemNumberSchema: ").append(toIndentedString(projectItemNumberSchema)).append("\n");
    sb.append("    elements: ").append(toIndentedString(elements)).append("\n");
    sb.append("    projectLabourTimeLabel: ").append(toIndentedString(projectLabourTimeLabel)).append("\n");
    sb.append("    containsDuplicateItemNumbers: ").append(toIndentedString(containsDuplicateItemNumbers)).append("\n");
    sb.append("    containsDuplicateElementIds: ").append(toIndentedString(containsDuplicateElementIds)).append("\n");
    sb.append("    ignoreDuplicateItemNumbers: ").append(toIndentedString(ignoreDuplicateItemNumbers)).append("\n");
    sb.append("    ignoreDuplicateElementIds: ").append(toIndentedString(ignoreDuplicateElementIds)).append("\n");
    sb.append("    totalPriceGrossByTaxRate: ").append(toIndentedString(totalPriceGrossByTaxRate)).append("\n");
    sb.append("    ignoreChildPriceUpdates: ").append(toIndentedString(ignoreChildPriceUpdates)).append("\n");
    sb.append("    deductedPrice: ").append(toIndentedString(deductedPrice)).append("\n");
    sb.append("    deductionFactor: ").append(toIndentedString(deductionFactor)).append("\n");
    sb.append("    absoluteDeduction: ").append(toIndentedString(absoluteDeduction)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    totalPriceGross: ").append(toIndentedString(totalPriceGross)).append("\n");
    sb.append("    totalPriceGrossDeducted: ").append(toIndentedString(totalPriceGrossDeducted)).append("\n");
    sb.append("    priceType: ").append(toIndentedString(priceType)).append("\n");
    sb.append("    bidder: ").append(toIndentedString(bidder)).append("\n");
    sb.append("    bidderDiscriminator: ").append(toIndentedString(bidderDiscriminator)).append("\n");
    sb.append("    gaebXmlId: ").append(toIndentedString(gaebXmlId)).append("\n");
    sb.append("    projectInformation: ").append(toIndentedString(projectInformation)).append("\n");
    sb.append("    exchangePhase: ").append(toIndentedString(exchangePhase)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    originDetail: ").append(toIndentedString(originDetail)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    offerByDate: ").append(toIndentedString(offerByDate)).append("\n");
    sb.append("    decisionDate: ").append(toIndentedString(decisionDate)).append("\n");
    sb.append("    bidDate: ").append(toIndentedString(bidDate)).append("\n");
    sb.append("    warrantyBondPercentage: ").append(toIndentedString(warrantyBondPercentage)).append("\n");
    sb.append("    executionGuaranteePercentage: ").append(toIndentedString(executionGuaranteePercentage)).append("\n");
    sb.append("    submissionLocation: ").append(toIndentedString(submissionLocation)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    priceInformation: ").append(toIndentedString(priceInformation)).append("\n");
    sb.append("    projectCatalogues: ").append(toIndentedString(projectCatalogues)).append("\n");
    sb.append("    catalogueReferences: ").append(toIndentedString(catalogueReferences)).append("\n");
    sb.append("    plannedExecutionStart: ").append(toIndentedString(plannedExecutionStart)).append("\n");
    sb.append("    plannedExecutionEnd: ").append(toIndentedString(plannedExecutionEnd)).append("\n");
    sb.append("    contractDate: ").append(toIndentedString(contractDate)).append("\n");
    sb.append("    contractIdentifier: ").append(toIndentedString(contractIdentifier)).append("\n");
    sb.append("    warrantyDuration: ").append(toIndentedString(warrantyDuration)).append("\n");
    sb.append("    warrantyEnd: ").append(toIndentedString(warrantyEnd)).append("\n");
    sb.append("    approvalDate: ").append(toIndentedString(approvalDate)).append("\n");
    sb.append("    typeOfApproval: ").append(toIndentedString(typeOfApproval)).append("\n");
    sb.append("    addendumNumber: ").append(toIndentedString(addendumNumber)).append("\n");
    sb.append("    addendumStatus: ").append(toIndentedString(addendumStatus)).append("\n");
    sb.append("    commerceProperties: ").append(toIndentedString(commerceProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

