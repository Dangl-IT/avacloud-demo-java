/*
 * AVACloud API 1.55.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.55.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.danglit.avacloud.client.models.VatCategory;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * This describes an allowance in an invoice, which is a deduction from the total amount
 */
@ApiModel(description = "This describes an allowance in an invoice, which is a deduction from the total amount")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-02-11T12:55:14.413Z")
public class InvoiceAllowance {
  @SerializedName("netAmount")
  private BigDecimal netAmount = null;

  @SerializedName("relativeAllowanceBaseAmount")
  private BigDecimal relativeAllowanceBaseAmount = null;

  @SerializedName("relativeAllowancePercentage")
  private BigDecimal relativeAllowancePercentage = null;

  @SerializedName("vatCategory")
  private VatCategory vatCategory = null;

  @SerializedName("vatRate")
  private BigDecimal vatRate = null;

  @SerializedName("reason")
  private String reason = null;

  @SerializedName("reasonCode")
  private String reasonCode = null;

  public InvoiceAllowance netAmount(BigDecimal netAmount) {
    this.netAmount = netAmount;
    return this;
  }

   /**
   * The net amount of the allowance
   * @return netAmount
  **/
  @ApiModelProperty(value = "The net amount of the allowance")
  public BigDecimal getNetAmount() {
    return netAmount;
  }

  public void setNetAmount(BigDecimal netAmount) {
    this.netAmount = netAmount;
  }

  public InvoiceAllowance relativeAllowanceBaseAmount(BigDecimal relativeAllowanceBaseAmount) {
    this.relativeAllowanceBaseAmount = relativeAllowanceBaseAmount;
    return this;
  }

   /**
   * If this is a relative / percentage allowance, this should be set and give the base amount that is being used for the calculation
   * @return relativeAllowanceBaseAmount
  **/
  @ApiModelProperty(value = "If this is a relative / percentage allowance, this should be set and give the base amount that is being used for the calculation")
  public BigDecimal getRelativeAllowanceBaseAmount() {
    return relativeAllowanceBaseAmount;
  }

  public void setRelativeAllowanceBaseAmount(BigDecimal relativeAllowanceBaseAmount) {
    this.relativeAllowanceBaseAmount = relativeAllowanceBaseAmount;
  }

  public InvoiceAllowance relativeAllowancePercentage(BigDecimal relativeAllowancePercentage) {
    this.relativeAllowancePercentage = relativeAllowancePercentage;
    return this;
  }

   /**
   * If this is a relative / percentage allowance, this should be set and be given in decimal representation, meaning 19% would be 0.19
   * @return relativeAllowancePercentage
  **/
  @ApiModelProperty(value = "If this is a relative / percentage allowance, this should be set and be given in decimal representation, meaning 19% would be 0.19")
  public BigDecimal getRelativeAllowancePercentage() {
    return relativeAllowancePercentage;
  }

  public void setRelativeAllowancePercentage(BigDecimal relativeAllowancePercentage) {
    this.relativeAllowancePercentage = relativeAllowancePercentage;
  }

  public InvoiceAllowance vatCategory(VatCategory vatCategory) {
    this.vatCategory = vatCategory;
    return this;
  }

   /**
   * The VAT category for the allowance
   * @return vatCategory
  **/
  @ApiModelProperty(required = true, value = "The VAT category for the allowance")
  public VatCategory getVatCategory() {
    return vatCategory;
  }

  public void setVatCategory(VatCategory vatCategory) {
    this.vatCategory = vatCategory;
  }

  public InvoiceAllowance vatRate(BigDecimal vatRate) {
    this.vatRate = vatRate;
    return this;
  }

   /**
   * The actual tax rate as a decimal value, meaning 19% would be 0.19
   * @return vatRate
  **/
  @ApiModelProperty(value = "The actual tax rate as a decimal value, meaning 19% would be 0.19")
  public BigDecimal getVatRate() {
    return vatRate;
  }

  public void setVatRate(BigDecimal vatRate) {
    this.vatRate = vatRate;
  }

  public InvoiceAllowance reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * A description of the allowance. This should not be set it ReasonCode is provided, otherwise this one takes precedence.
   * @return reason
  **/
  @ApiModelProperty(value = "A description of the allowance. This should not be set it ReasonCode is provided, otherwise this one takes precedence.")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public InvoiceAllowance reasonCode(String reasonCode) {
    this.reasonCode = reasonCode;
    return this;
  }

   /**
   * A reason code for the allowance according to UNTDID 5189. See this list: https://unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred5189.htm
   * @return reasonCode
  **/
  @ApiModelProperty(value = "A reason code for the allowance according to UNTDID 5189. See this list: https://unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred5189.htm")
  public String getReasonCode() {
    return reasonCode;
  }

  public void setReasonCode(String reasonCode) {
    this.reasonCode = reasonCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceAllowance invoiceAllowance = (InvoiceAllowance) o;
    return Objects.equals(this.netAmount, invoiceAllowance.netAmount) &&
        Objects.equals(this.relativeAllowanceBaseAmount, invoiceAllowance.relativeAllowanceBaseAmount) &&
        Objects.equals(this.relativeAllowancePercentage, invoiceAllowance.relativeAllowancePercentage) &&
        Objects.equals(this.vatCategory, invoiceAllowance.vatCategory) &&
        Objects.equals(this.vatRate, invoiceAllowance.vatRate) &&
        Objects.equals(this.reason, invoiceAllowance.reason) &&
        Objects.equals(this.reasonCode, invoiceAllowance.reasonCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(netAmount, relativeAllowanceBaseAmount, relativeAllowancePercentage, vatCategory, vatRate, reason, reasonCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceAllowance {\n");
    
    sb.append("    netAmount: ").append(toIndentedString(netAmount)).append("\n");
    sb.append("    relativeAllowanceBaseAmount: ").append(toIndentedString(relativeAllowanceBaseAmount)).append("\n");
    sb.append("    relativeAllowancePercentage: ").append(toIndentedString(relativeAllowancePercentage)).append("\n");
    sb.append("    vatCategory: ").append(toIndentedString(vatCategory)).append("\n");
    sb.append("    vatRate: ").append(toIndentedString(vatRate)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

