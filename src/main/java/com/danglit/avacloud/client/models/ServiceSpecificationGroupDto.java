/*
 * AVACloud API 1.4.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.danglit.avacloud.client.models.ComissionStatusDto;
import com.danglit.avacloud.client.models.GrossPriceComponentDto;
import com.danglit.avacloud.client.models.IElementDto;
import com.danglit.avacloud.client.models.ItemNumberDto;
import com.danglit.avacloud.client.models.ItemNumberSchemaDto;
import com.danglit.avacloud.client.models.PriceTypeDto;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * ServiceSpecificationGroupDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-02T22:46:57.991Z")
public class ServiceSpecificationGroupDto extends IElementDto {
  @SerializedName("projectHourlyWage")
  private BigDecimal projectHourlyWage = null;

  @SerializedName("projectTaxRate")
  private BigDecimal projectTaxRate = null;

  @SerializedName("projectPriceComponents")
  private List<String> projectPriceComponents = null;

  @SerializedName("projectItemNumberSchema")
  private ItemNumberSchemaDto projectItemNumberSchema = null;

  @SerializedName("elements")
  private List<IElementDto> elements = null;

  @SerializedName("projectLabourTimeLabel")
  private String projectLabourTimeLabel = null;

  @SerializedName("containsDuplicateItemNumbers")
  private Boolean containsDuplicateItemNumbers = null;

  @SerializedName("ignoreDuplicateItemNumbers")
  private Boolean ignoreDuplicateItemNumbers = null;

  @SerializedName("totalPriceGrossByTaxRate")
  private List<GrossPriceComponentDto> totalPriceGrossByTaxRate = null;

  @SerializedName("ignoreChildPriceUpdates")
  private Boolean ignoreChildPriceUpdates = null;

  @SerializedName("deductedPrice")
  private BigDecimal deductedPrice = null;

  @SerializedName("deductionFactor")
  private BigDecimal deductionFactor = null;

  @SerializedName("totalPrice")
  private BigDecimal totalPrice = null;

  @SerializedName("totalPriceGross")
  private BigDecimal totalPriceGross = null;

  @SerializedName("totalPriceGrossDeducted")
  private BigDecimal totalPriceGrossDeducted = null;

  @SerializedName("priceType")
  private PriceTypeDto priceType = null;

  @SerializedName("shortText")
  private String shortText = null;

  @SerializedName("comissionStatus")
  private ComissionStatusDto comissionStatus = null;

  @SerializedName("itemNumber")
  private ItemNumberDto itemNumber = null;

  @SerializedName("elementType")
  private String elementType = null;

  @SerializedName("isLot")
  private Boolean isLot = null;

  @SerializedName("type")
  private String type = null;

   /**
   * Get projectHourlyWage
   * @return projectHourlyWage
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getProjectHourlyWage() {
    return projectHourlyWage;
  }

  public ServiceSpecificationGroupDto projectTaxRate(BigDecimal projectTaxRate) {
    this.projectTaxRate = projectTaxRate;
    return this;
  }

   /**
   * Get projectTaxRate
   * @return projectTaxRate
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getProjectTaxRate() {
    return projectTaxRate;
  }

  public void setProjectTaxRate(BigDecimal projectTaxRate) {
    this.projectTaxRate = projectTaxRate;
  }

  public ServiceSpecificationGroupDto projectPriceComponents(List<String> projectPriceComponents) {
    this.projectPriceComponents = projectPriceComponents;
    return this;
  }

  public ServiceSpecificationGroupDto addProjectPriceComponentsItem(String projectPriceComponentsItem) {
    if (this.projectPriceComponents == null) {
      this.projectPriceComponents = new ArrayList<>();
    }
    this.projectPriceComponents.add(projectPriceComponentsItem);
    return this;
  }

   /**
   * Get projectPriceComponents
   * @return projectPriceComponents
  **/
  @ApiModelProperty(value = "")
  public List<String> getProjectPriceComponents() {
    return projectPriceComponents;
  }

  public void setProjectPriceComponents(List<String> projectPriceComponents) {
    this.projectPriceComponents = projectPriceComponents;
  }

  public ServiceSpecificationGroupDto projectItemNumberSchema(ItemNumberSchemaDto projectItemNumberSchema) {
    this.projectItemNumberSchema = projectItemNumberSchema;
    return this;
  }

   /**
   * Get projectItemNumberSchema
   * @return projectItemNumberSchema
  **/
  @ApiModelProperty(value = "")
  public ItemNumberSchemaDto getProjectItemNumberSchema() {
    return projectItemNumberSchema;
  }

  public void setProjectItemNumberSchema(ItemNumberSchemaDto projectItemNumberSchema) {
    this.projectItemNumberSchema = projectItemNumberSchema;
  }

  public ServiceSpecificationGroupDto elements(List<IElementDto> elements) {
    this.elements = elements;
    return this;
  }

  public ServiceSpecificationGroupDto addElementsItem(IElementDto elementsItem) {
    if (this.elements == null) {
      this.elements = new ArrayList<>();
    }
    this.elements.add(elementsItem);
    return this;
  }

   /**
   * Get elements
   * @return elements
  **/
  @ApiModelProperty(value = "")
  public List<IElementDto> getElements() {
    return elements;
  }

  public void setElements(List<IElementDto> elements) {
    this.elements = elements;
  }

   /**
   * Get projectLabourTimeLabel
   * @return projectLabourTimeLabel
  **/
  @ApiModelProperty(value = "")
  public String getProjectLabourTimeLabel() {
    return projectLabourTimeLabel;
  }

   /**
   * Get containsDuplicateItemNumbers
   * @return containsDuplicateItemNumbers
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isContainsDuplicateItemNumbers() {
    return containsDuplicateItemNumbers;
  }

  public ServiceSpecificationGroupDto ignoreDuplicateItemNumbers(Boolean ignoreDuplicateItemNumbers) {
    this.ignoreDuplicateItemNumbers = ignoreDuplicateItemNumbers;
    return this;
  }

   /**
   * Get ignoreDuplicateItemNumbers
   * @return ignoreDuplicateItemNumbers
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIgnoreDuplicateItemNumbers() {
    return ignoreDuplicateItemNumbers;
  }

  public void setIgnoreDuplicateItemNumbers(Boolean ignoreDuplicateItemNumbers) {
    this.ignoreDuplicateItemNumbers = ignoreDuplicateItemNumbers;
  }

  public ServiceSpecificationGroupDto totalPriceGrossByTaxRate(List<GrossPriceComponentDto> totalPriceGrossByTaxRate) {
    this.totalPriceGrossByTaxRate = totalPriceGrossByTaxRate;
    return this;
  }

  public ServiceSpecificationGroupDto addTotalPriceGrossByTaxRateItem(GrossPriceComponentDto totalPriceGrossByTaxRateItem) {
    if (this.totalPriceGrossByTaxRate == null) {
      this.totalPriceGrossByTaxRate = new ArrayList<>();
    }
    this.totalPriceGrossByTaxRate.add(totalPriceGrossByTaxRateItem);
    return this;
  }

   /**
   * Get totalPriceGrossByTaxRate
   * @return totalPriceGrossByTaxRate
  **/
  @ApiModelProperty(value = "")
  public List<GrossPriceComponentDto> getTotalPriceGrossByTaxRate() {
    return totalPriceGrossByTaxRate;
  }

  public void setTotalPriceGrossByTaxRate(List<GrossPriceComponentDto> totalPriceGrossByTaxRate) {
    this.totalPriceGrossByTaxRate = totalPriceGrossByTaxRate;
  }

  public ServiceSpecificationGroupDto ignoreChildPriceUpdates(Boolean ignoreChildPriceUpdates) {
    this.ignoreChildPriceUpdates = ignoreChildPriceUpdates;
    return this;
  }

   /**
   * Get ignoreChildPriceUpdates
   * @return ignoreChildPriceUpdates
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIgnoreChildPriceUpdates() {
    return ignoreChildPriceUpdates;
  }

  public void setIgnoreChildPriceUpdates(Boolean ignoreChildPriceUpdates) {
    this.ignoreChildPriceUpdates = ignoreChildPriceUpdates;
  }

   /**
   * Get deductedPrice
   * @return deductedPrice
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getDeductedPrice() {
    return deductedPrice;
  }

  public ServiceSpecificationGroupDto deductionFactor(BigDecimal deductionFactor) {
    this.deductionFactor = deductionFactor;
    return this;
  }

   /**
   * Get deductionFactor
   * @return deductionFactor
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getDeductionFactor() {
    return deductionFactor;
  }

  public void setDeductionFactor(BigDecimal deductionFactor) {
    this.deductionFactor = deductionFactor;
  }

   /**
   * Get totalPrice
   * @return totalPrice
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getTotalPrice() {
    return totalPrice;
  }

   /**
   * Get totalPriceGross
   * @return totalPriceGross
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getTotalPriceGross() {
    return totalPriceGross;
  }

   /**
   * Get totalPriceGrossDeducted
   * @return totalPriceGrossDeducted
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getTotalPriceGrossDeducted() {
    return totalPriceGrossDeducted;
  }

  public ServiceSpecificationGroupDto priceType(PriceTypeDto priceType) {
    this.priceType = priceType;
    return this;
  }

   /**
   * Get priceType
   * @return priceType
  **/
  @ApiModelProperty(required = true, value = "")
  public PriceTypeDto getPriceType() {
    return priceType;
  }

  public void setPriceType(PriceTypeDto priceType) {
    this.priceType = priceType;
  }

  public ServiceSpecificationGroupDto shortText(String shortText) {
    this.shortText = shortText;
    return this;
  }

   /**
   * Get shortText
   * @return shortText
  **/
  @ApiModelProperty(value = "")
  public String getShortText() {
    return shortText;
  }

  public void setShortText(String shortText) {
    this.shortText = shortText;
  }

  public ServiceSpecificationGroupDto comissionStatus(ComissionStatusDto comissionStatus) {
    this.comissionStatus = comissionStatus;
    return this;
  }

   /**
   * Get comissionStatus
   * @return comissionStatus
  **/
  @ApiModelProperty(required = true, value = "")
  public ComissionStatusDto getComissionStatus() {
    return comissionStatus;
  }

  public void setComissionStatus(ComissionStatusDto comissionStatus) {
    this.comissionStatus = comissionStatus;
  }

  public ServiceSpecificationGroupDto itemNumber(ItemNumberDto itemNumber) {
    this.itemNumber = itemNumber;
    return this;
  }

   /**
   * Get itemNumber
   * @return itemNumber
  **/
  @ApiModelProperty(value = "")
  public ItemNumberDto getItemNumber() {
    return itemNumber;
  }

  public void setItemNumber(ItemNumberDto itemNumber) {
    this.itemNumber = itemNumber;
  }

  public ServiceSpecificationGroupDto elementType(String elementType) {
    this.elementType = elementType;
    return this;
  }

   /**
   * Get elementType
   * @return elementType
  **/
  @ApiModelProperty(value = "")
  public String getElementType() {
    return elementType;
  }

  public void setElementType(String elementType) {
    this.elementType = elementType;
  }

   /**
   * Get isLot
   * @return isLot
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsLot() {
    return isLot;
  }

  public ServiceSpecificationGroupDto type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceSpecificationGroupDto serviceSpecificationGroupDto = (ServiceSpecificationGroupDto) o;
    return Objects.equals(this.projectHourlyWage, serviceSpecificationGroupDto.projectHourlyWage) &&
        Objects.equals(this.projectTaxRate, serviceSpecificationGroupDto.projectTaxRate) &&
        Objects.equals(this.projectPriceComponents, serviceSpecificationGroupDto.projectPriceComponents) &&
        Objects.equals(this.projectItemNumberSchema, serviceSpecificationGroupDto.projectItemNumberSchema) &&
        Objects.equals(this.elements, serviceSpecificationGroupDto.elements) &&
        Objects.equals(this.projectLabourTimeLabel, serviceSpecificationGroupDto.projectLabourTimeLabel) &&
        Objects.equals(this.containsDuplicateItemNumbers, serviceSpecificationGroupDto.containsDuplicateItemNumbers) &&
        Objects.equals(this.ignoreDuplicateItemNumbers, serviceSpecificationGroupDto.ignoreDuplicateItemNumbers) &&
        Objects.equals(this.totalPriceGrossByTaxRate, serviceSpecificationGroupDto.totalPriceGrossByTaxRate) &&
        Objects.equals(this.ignoreChildPriceUpdates, serviceSpecificationGroupDto.ignoreChildPriceUpdates) &&
        Objects.equals(this.deductedPrice, serviceSpecificationGroupDto.deductedPrice) &&
        Objects.equals(this.deductionFactor, serviceSpecificationGroupDto.deductionFactor) &&
        Objects.equals(this.totalPrice, serviceSpecificationGroupDto.totalPrice) &&
        Objects.equals(this.totalPriceGross, serviceSpecificationGroupDto.totalPriceGross) &&
        Objects.equals(this.totalPriceGrossDeducted, serviceSpecificationGroupDto.totalPriceGrossDeducted) &&
        Objects.equals(this.priceType, serviceSpecificationGroupDto.priceType) &&
        Objects.equals(this.shortText, serviceSpecificationGroupDto.shortText) &&
        Objects.equals(this.comissionStatus, serviceSpecificationGroupDto.comissionStatus) &&
        Objects.equals(this.itemNumber, serviceSpecificationGroupDto.itemNumber) &&
        Objects.equals(this.elementType, serviceSpecificationGroupDto.elementType) &&
        Objects.equals(this.isLot, serviceSpecificationGroupDto.isLot) &&
        Objects.equals(this.type, serviceSpecificationGroupDto.type) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectHourlyWage, projectTaxRate, projectPriceComponents, projectItemNumberSchema, elements, projectLabourTimeLabel, containsDuplicateItemNumbers, ignoreDuplicateItemNumbers, totalPriceGrossByTaxRate, ignoreChildPriceUpdates, deductedPrice, deductionFactor, totalPrice, totalPriceGross, totalPriceGrossDeducted, priceType, shortText, comissionStatus, itemNumber, elementType, isLot, type, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceSpecificationGroupDto {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    projectHourlyWage: ").append(toIndentedString(projectHourlyWage)).append("\n");
    sb.append("    projectTaxRate: ").append(toIndentedString(projectTaxRate)).append("\n");
    sb.append("    projectPriceComponents: ").append(toIndentedString(projectPriceComponents)).append("\n");
    sb.append("    projectItemNumberSchema: ").append(toIndentedString(projectItemNumberSchema)).append("\n");
    sb.append("    elements: ").append(toIndentedString(elements)).append("\n");
    sb.append("    projectLabourTimeLabel: ").append(toIndentedString(projectLabourTimeLabel)).append("\n");
    sb.append("    containsDuplicateItemNumbers: ").append(toIndentedString(containsDuplicateItemNumbers)).append("\n");
    sb.append("    ignoreDuplicateItemNumbers: ").append(toIndentedString(ignoreDuplicateItemNumbers)).append("\n");
    sb.append("    totalPriceGrossByTaxRate: ").append(toIndentedString(totalPriceGrossByTaxRate)).append("\n");
    sb.append("    ignoreChildPriceUpdates: ").append(toIndentedString(ignoreChildPriceUpdates)).append("\n");
    sb.append("    deductedPrice: ").append(toIndentedString(deductedPrice)).append("\n");
    sb.append("    deductionFactor: ").append(toIndentedString(deductionFactor)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    totalPriceGross: ").append(toIndentedString(totalPriceGross)).append("\n");
    sb.append("    totalPriceGrossDeducted: ").append(toIndentedString(totalPriceGrossDeducted)).append("\n");
    sb.append("    priceType: ").append(toIndentedString(priceType)).append("\n");
    sb.append("    shortText: ").append(toIndentedString(shortText)).append("\n");
    sb.append("    comissionStatus: ").append(toIndentedString(comissionStatus)).append("\n");
    sb.append("    itemNumber: ").append(toIndentedString(itemNumber)).append("\n");
    sb.append("    elementType: ").append(toIndentedString(elementType)).append("\n");
    sb.append("    isLot: ").append(toIndentedString(isLot)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

