/*
 * AVACloud API 1.29.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.29.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * This class represents a single article, usually used within ProductData
 */
@ApiModel(description = "This class represents a single article, usually used within ProductData")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-06-27T14:07:49.059Z")
public class ArticleDataDto {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("articleNumber")
  private String articleNumber = null;

  @SerializedName("quantity")
  private BigDecimal quantity = null;

  @SerializedName("unitTag")
  private String unitTag = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("shortText")
  private String shortText = null;

  @SerializedName("longText")
  private String longText = null;

  @SerializedName("htmlLongText")
  private String htmlLongText = null;

  public ArticleDataDto id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Elements GUID identifier.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Elements GUID identifier.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ArticleDataDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name (or brand name) for this article, usually given by the supplier or vendor.
   * @return name
  **/
  @ApiModelProperty(value = "The name (or brand name) for this article, usually given by the supplier or vendor.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ArticleDataDto articleNumber(String articleNumber) {
    this.articleNumber = articleNumber;
    return this;
  }

   /**
   * An article number that describes it, useful when integrating other systems.
   * @return articleNumber
  **/
  @ApiModelProperty(value = "An article number that describes it, useful when integrating other systems.")
  public String getArticleNumber() {
    return articleNumber;
  }

  public void setArticleNumber(String articleNumber) {
    this.articleNumber = articleNumber;
  }

  public ArticleDataDto quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Quantity for this article. If this is used within a Position, the quantity here should be the quantity required for the full quantity of the position, not for a single unit.
   * @return quantity
  **/
  @ApiModelProperty(required = true, value = "Quantity for this article. If this is used within a Position, the quantity here should be the quantity required for the full quantity of the position, not for a single unit.")
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  public ArticleDataDto unitTag(String unitTag) {
    this.unitTag = unitTag;
    return this;
  }

   /**
   * The unit tag for this single ArticleData.
   * @return unitTag
  **/
  @ApiModelProperty(value = "The unit tag for this single ArticleData.")
  public String getUnitTag() {
    return unitTag;
  }

  public void setUnitTag(String unitTag) {
    this.unitTag = unitTag;
  }

  public ArticleDataDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * This is an optional text element that can be used to further describe the ArticleData.
   * @return description
  **/
  @ApiModelProperty(value = "This is an optional text element that can be used to further describe the ArticleData.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ArticleDataDto shortText(String shortText) {
    this.shortText = shortText;
    return this;
  }

   /**
   * Short description for this ITextElement element.
   * @return shortText
  **/
  @ApiModelProperty(value = "Short description for this ITextElement element.")
  public String getShortText() {
    return shortText;
  }

  public void setShortText(String shortText) {
    this.shortText = shortText;
  }

  public ArticleDataDto longText(String longText) {
    this.longText = longText;
    return this;
  }

   /**
   * Detailed description for this ITextElement element. When the HtmlLongText is set, this is automatically overwritten and filled with the appropriate plain text representation of the Html text. Vice versa, setting this property overrides the HtmlLongText.
   * @return longText
  **/
  @ApiModelProperty(value = "Detailed description for this ITextElement element. When the HtmlLongText is set, this is automatically overwritten and filled with the appropriate plain text representation of the Html text. Vice versa, setting this property overrides the HtmlLongText.")
  public String getLongText() {
    return longText;
  }

  public void setLongText(String longText) {
    this.longText = longText;
  }

  public ArticleDataDto htmlLongText(String htmlLongText) {
    this.htmlLongText = htmlLongText;
    return this;
  }

   /**
   * This contains the Html representation of the Longtext. When the LongText is set, this is automatically overwritten and filled with the appropriate Html representation of the plaintext. Vice versa, setting this property overrides the LongText. GAEB 90 and GAEB 2000 exports do not support any image functionality. In GAEB XML, only images that use an embedded Base64 data uri are exported, regular url references are cleared before written out.
   * @return htmlLongText
  **/
  @ApiModelProperty(value = "This contains the Html representation of the Longtext. When the LongText is set, this is automatically overwritten and filled with the appropriate Html representation of the plaintext. Vice versa, setting this property overrides the LongText. GAEB 90 and GAEB 2000 exports do not support any image functionality. In GAEB XML, only images that use an embedded Base64 data uri are exported, regular url references are cleared before written out.")
  public String getHtmlLongText() {
    return htmlLongText;
  }

  public void setHtmlLongText(String htmlLongText) {
    this.htmlLongText = htmlLongText;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArticleDataDto articleDataDto = (ArticleDataDto) o;
    return Objects.equals(this.id, articleDataDto.id) &&
        Objects.equals(this.name, articleDataDto.name) &&
        Objects.equals(this.articleNumber, articleDataDto.articleNumber) &&
        Objects.equals(this.quantity, articleDataDto.quantity) &&
        Objects.equals(this.unitTag, articleDataDto.unitTag) &&
        Objects.equals(this.description, articleDataDto.description) &&
        Objects.equals(this.shortText, articleDataDto.shortText) &&
        Objects.equals(this.longText, articleDataDto.longText) &&
        Objects.equals(this.htmlLongText, articleDataDto.htmlLongText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, articleNumber, quantity, unitTag, description, shortText, longText, htmlLongText);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArticleDataDto {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    articleNumber: ").append(toIndentedString(articleNumber)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitTag: ").append(toIndentedString(unitTag)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    shortText: ").append(toIndentedString(shortText)).append("\n");
    sb.append("    longText: ").append(toIndentedString(longText)).append("\n");
    sb.append("    htmlLongText: ").append(toIndentedString(htmlLongText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

