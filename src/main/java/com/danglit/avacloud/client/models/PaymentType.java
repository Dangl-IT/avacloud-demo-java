/*
 * AVACloud API 1.59.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.59.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Indication of the instrument of payment, which may include a guarantee. Enumeration values are self-descriptive, so no comments needed here. According to UNCL 4461, see: https://docs.peppol.eu/poacc/billing/3.0/codelist/UNCL4461/
 */
@JsonAdapter(PaymentType.Adapter.class)
public enum PaymentType {
  
  MUTUALLYDEFINED("MutuallyDefined"),
  
  INSTRUMENTNOTDEFINED("InstrumentNotDefined"),
  
  AUTOMATEDCLEARINGHOUSECREDIT("AutomatedClearingHouseCredit"),
  
  AUTOMATEDCLEARINGHOUSEDEBIT("AutomatedClearingHouseDebit"),
  
  ACHDEMANDDEBITREVERSAL("ACHDemandDebitReversal"),
  
  ACHDEMANDCREDITREVERSAL("ACHDemandCreditReversal"),
  
  ACHDEMANDCREDIT("ACHDemandCredit"),
  
  ACHDEMANDDEBIT("ACHDemandDebit"),
  
  HOLD("Hold"),
  
  NATIONALORREGIONALCLEARING("NationalOrRegionalClearing"),
  
  INCASH("InCash"),
  
  ACHSAVINGSCREDITREVERSAL("ACHSavingsCreditReversal"),
  
  ACHSAVINGSDEBITREVERSAL("ACHSavingsDebitReversal"),
  
  ACHSAVINGSCREDIT("ACHSavingsCredit"),
  
  ACHSAVINGSDEBIT("ACHSavingsDebit"),
  
  BOOKENTRYCREDIT("BookentryCredit"),
  
  BOOKENTRYDEBIT("BookentryDebit"),
  
  ACHDEMANDCASHCONCENTRATIONDISBURSEMENTCCDCREDIT("ACHDemandCashConcentrationDisbursementCCDCredit"),
  
  ACHDEMANDCASHCONCENTRATIONDISBURSEMENTCCDDEBIT("ACHDemandCashConcentrationDisbursementCCDDebit"),
  
  ACHDEMANDCORPORATETRADEPAYMENTCTPCREDIT("ACHDemandCorporateTradePaymentCTPCredit"),
  
  CHEQUE("Cheque"),
  
  BANKERSDRAFT("BankerSDraft"),
  
  CERTIFIEDBANKERSDRAFT("CertifiedBankerSDraft"),
  
  BANKCHEQUEISSUEDBYABANKINGORSIMILARESTABLISHMENT("BankChequeIssuedByABankingOrSimilarEstablishment"),
  
  BILLOFEXCHANGEAWAITINGACCEPTANCE("BillOfExchangeAwaitingAcceptance"),
  
  CERTIFIEDCHEQUE("CertifiedCheque"),
  
  LOCALCHEQUE("LocalCheque"),
  
  ACHDEMANDCORPORATETRADEPAYMENTCTPDEBIT("ACHDemandCorporateTradePaymentCTPDebit"),
  
  ACHDEMANDCORPORATETRADEEXCHANGECTXCREDIT("ACHDemandCorporateTradeExchangeCTXCredit"),
  
  ACHDEMANDCORPORATETRADEEXCHANGECTXDEBIT("ACHDemandCorporateTradeExchangeCTXDebit"),
  
  CREDITTRANSFER("CreditTransfer"),
  
  DEBITTRANSFER("DebitTransfer"),
  
  ACHDEMANDCASHCONCENTRATIONDISBURSEMENTPLUSCCDCREDIT("ACHDemandCashConcentrationDisbursementPlusCCDCredit"),
  
  ACHDEMANDCASHCONCENTRATIONDISBURSEMENTPLUSCCDDEBIT("ACHDemandCashConcentrationDisbursementPlusCCDDebit"),
  
  ACHPREARRANGEDPAYMENTANDDEPOSITPPD("ACHPrearrangedPaymentAndDepositPPD"),
  
  ACHSAVINGSCASHCONCENTRATIONDISBURSEMENTCCDCREDIT("ACHSavingsCashConcentrationDisbursementCCDCredit"),
  
  ACHSAVINGSCASHCONCENTRATIONDISBURSEMENTCCDDEBIT("ACHSavingsCashConcentrationDisbursementCCDDebit"),
  
  ACHSAVINGSCORPORATETRADEPAYMENTCTPCREDIT("ACHSavingsCorporateTradePaymentCTPCredit"),
  
  ACHSAVINGSCORPORATETRADEPAYMENTCTPDEBIT("ACHSavingsCorporateTradePaymentCTPDebit"),
  
  ACHSAVINGSCORPORATETRADEEXCHANGECTXCREDIT("ACHSavingsCorporateTradeExchangeCTXCredit"),
  
  ACHSAVINGSCORPORATETRADEEXCHANGECTXDEBIT("ACHSavingsCorporateTradeExchangeCTXDebit"),
  
  ACHSAVINGSCASHCONCENTRATIONDISBURSEMENTPLUSCCDCREDIT("ACHSavingsCashConcentrationDisbursementPlusCCDCredit"),
  
  PAYMENTTOBANKACCOUNT("PaymentToBankAccount"),
  
  ACHSAVINGSCASHCONCENTRATIONDISBURSEMENTPLUSCCDDEBIT("ACHSavingsCashConcentrationDisbursementPlusCCDDebit"),
  
  ACCEPTEDBILLOFEXCHANGE("AcceptedBillOfExchange"),
  
  REFERENCEDHOMEBANKINGCREDITTRANSFER("ReferencedHomeBankingCreditTransfer"),
  
  INTERBANKDEBITTRANSFER("InterbankDebitTransfer"),
  
  HOMEBANKINGDEBITTRANSFER("HomeBankingDebitTransfer"),
  
  BANKCARD("BankCard"),
  
  DIRECTDEBIT("DirectDebit"),
  
  PAYMENTBYPOSTGIRO("PaymentByPostgiro"),
  
  FRNORME697TELEREGLEMENTCFONBFRENCHORGANISATIONFOR("FRNorme697TelereglementCFONBFrenchOrganisationFor"),
  
  URGENTCOMMERCIALPAYMENT("UrgentCommercialPayment"),
  
  URGENTTREASURYPAYMENT("UrgentTreasuryPayment"),
  
  CREDITCARD("CreditCard"),
  
  DEBITCARD("DebitCard"),
  
  BANKGIRO("Bankgiro"),
  
  STANDINGAGREEMENT("StandingAgreement"),
  
  SEPACREDITTRANSFER("SEPACreditTransfer"),
  
  SEPADIRECTDEBIT("SEPADirectDebit"),
  
  PROMISSORYNOTE("PromissoryNote"),
  
  PROMISSORYNOTESIGNEDBYTHEDEBTOR("PromissoryNoteSignedByTheDebtor"),
  
  PROMISSORYNOTESIGNEDBYTHEDEBTORANDENDORSEDBYABANK("PromissoryNoteSignedByTheDebtorAndEndorsedByABank"),
  
  PROMISSORYNOTESIGNEDBYTHEDEBTORANDENDORSEDBYATHIRDPARTY("PromissoryNoteSignedByTheDebtorAndEndorsedByAThirdParty"),
  
  PROMISSORYNOTESIGNEDBYABANK("PromissoryNoteSignedByABank"),
  
  PROMISSORYNOTESIGNEDBYABANKANDENDORSEDBYANOTHERBANK("PromissoryNoteSignedByABankAndEndorsedByAnotherBank"),
  
  PROMISSORYNOTESIGNEDBYATHIRDPARTY("PromissoryNoteSignedByAThirdParty"),
  
  PROMISSORYNOTESIGNEDBYATHIRDPARTYANDENDORSEDBYABANK("PromissoryNoteSignedByAThirdPartyAndEndorsedByABank"),
  
  ONLINEPAYMENTSERVICE("OnlinePaymentService"),
  
  BILLDRAWNBYTHECREDITORONTHEDEBTOR("BillDrawnByTheCreditorOnTheDebtor"),
  
  BILLDRAWNBYTHECREDITORONABANK("BillDrawnByTheCreditorOnABank"),
  
  BILLDRAWNBYTHECREDITORENDORSEDBYANOTHERBANK("BillDrawnByTheCreditorEndorsedByAnotherBank"),
  
  BILLDRAWNBYTHECREDITORONABANKANDENDORSEDBYATHIRDPARTY("BillDrawnByTheCreditorOnABankAndEndorsedByAThirdParty"),
  
  BILLDRAWNBYTHECREDITORONATHIRDPARTY("BillDrawnByTheCreditorOnAThirdParty"),
  
  BILLDRAWNBYCREDITORONTHIRDPARTYACCEPTEDANDENDORSEDBYBANK("BillDrawnByCreditorOnThirdPartyAcceptedAndEndorsedByBank"),
  
  NOTTRANSFERABLEBANKERSDRAFT("NotTransferableBankerSDraft"),
  
  NOTTRANSFERABLELOCALCHEQUE("NotTransferableLocalCheque"),
  
  REFERENCEGIRO("ReferenceGiro"),
  
  URGENTGIRO("UrgentGiro"),
  
  FREEFORMATGIRO("FreeFormatGiro"),
  
  REQUESTEDMETHODFORPAYMENTWASNOTUSED("RequestedMethodForPaymentWasNotUsed"),
  
  CLEARINGBETWEENPARTNERS("ClearingBetweenPartners"),
  
  JPELECTRONICALLYRECORDEDMONETARYCLAIMS("JPElectronicallyRecordedMonetaryClaims");

  private String value;

  PaymentType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PaymentType fromValue(String text) {
    for (PaymentType b : PaymentType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<PaymentType> {
    @Override
    public void write(final JsonWriter jsonWriter, final PaymentType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PaymentType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PaymentType.fromValue(String.valueOf(value));
    }
  }
}

