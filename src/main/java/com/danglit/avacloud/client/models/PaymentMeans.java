/*
 * AVACloud API 1.55.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.55.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents a payment means for an invoice
 */
@ApiModel(description = "Represents a payment means for an invoice")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-02-11T12:55:14.413Z")
public class PaymentMeans {
  @SerializedName("accountIdentifier")
  private String accountIdentifier = null;

  @SerializedName("accountName")
  private String accountName = null;

  @SerializedName("serviceProviderIdentifier")
  private String serviceProviderIdentifier = null;

  @SerializedName("directDebitMandateId")
  private String directDebitMandateId = null;

  @SerializedName("directDebitIban")
  private String directDebitIban = null;

  @SerializedName("paymentId")
  private String paymentId = null;

  public PaymentMeans accountIdentifier(String accountIdentifier) {
    this.accountIdentifier = accountIdentifier;
    return this;
  }

   /**
   * This is typically the IBAN or account number BT-84 in XRechnung.
   * @return accountIdentifier
  **/
  @ApiModelProperty(value = "This is typically the IBAN or account number BT-84 in XRechnung.")
  public String getAccountIdentifier() {
    return accountIdentifier;
  }

  public void setAccountIdentifier(String accountIdentifier) {
    this.accountIdentifier = accountIdentifier;
  }

  public PaymentMeans accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * The name for the account, typically the name of the owner for a bank account. BT-85 in XRechnung.
   * @return accountName
  **/
  @ApiModelProperty(value = "The name for the account, typically the name of the owner for a bank account. BT-85 in XRechnung.")
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  public PaymentMeans serviceProviderIdentifier(String serviceProviderIdentifier) {
    this.serviceProviderIdentifier = serviceProviderIdentifier;
    return this;
  }

   /**
   * This can be the BIC BT-86 in XRechnung.
   * @return serviceProviderIdentifier
  **/
  @ApiModelProperty(value = "This can be the BIC BT-86 in XRechnung.")
  public String getServiceProviderIdentifier() {
    return serviceProviderIdentifier;
  }

  public void setServiceProviderIdentifier(String serviceProviderIdentifier) {
    this.serviceProviderIdentifier = serviceProviderIdentifier;
  }

  public PaymentMeans directDebitMandateId(String directDebitMandateId) {
    this.directDebitMandateId = directDebitMandateId;
    return this;
  }

   /**
   * If used, this is the mandate id for direct debit under which the direct debit will be performed BT-89 in XRechnung.
   * @return directDebitMandateId
  **/
  @ApiModelProperty(value = "If used, this is the mandate id for direct debit under which the direct debit will be performed BT-89 in XRechnung.")
  public String getDirectDebitMandateId() {
    return directDebitMandateId;
  }

  public void setDirectDebitMandateId(String directDebitMandateId) {
    this.directDebitMandateId = directDebitMandateId;
  }

  public PaymentMeans directDebitIban(String directDebitIban) {
    this.directDebitIban = directDebitIban;
    return this;
  }

   /**
   * If used, this is the IBAN for direct debit BT-91 in XRechnung.
   * @return directDebitIban
  **/
  @ApiModelProperty(value = "If used, this is the IBAN for direct debit BT-91 in XRechnung.")
  public String getDirectDebitIban() {
    return directDebitIban;
  }

  public void setDirectDebitIban(String directDebitIban) {
    this.directDebitIban = directDebitIban;
  }

  public PaymentMeans paymentId(String paymentId) {
    this.paymentId = paymentId;
    return this;
  }

   /**
   * The payment id, e.g. a reference number for the payment. In German, this would be called \&quot;Verwendungszweck\&quot;. BT-83 in XRechnung.
   * @return paymentId
  **/
  @ApiModelProperty(value = "The payment id, e.g. a reference number for the payment. In German, this would be called \"Verwendungszweck\". BT-83 in XRechnung.")
  public String getPaymentId() {
    return paymentId;
  }

  public void setPaymentId(String paymentId) {
    this.paymentId = paymentId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMeans paymentMeans = (PaymentMeans) o;
    return Objects.equals(this.accountIdentifier, paymentMeans.accountIdentifier) &&
        Objects.equals(this.accountName, paymentMeans.accountName) &&
        Objects.equals(this.serviceProviderIdentifier, paymentMeans.serviceProviderIdentifier) &&
        Objects.equals(this.directDebitMandateId, paymentMeans.directDebitMandateId) &&
        Objects.equals(this.directDebitIban, paymentMeans.directDebitIban) &&
        Objects.equals(this.paymentId, paymentMeans.paymentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountIdentifier, accountName, serviceProviderIdentifier, directDebitMandateId, directDebitIban, paymentId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMeans {\n");
    
    sb.append("    accountIdentifier: ").append(toIndentedString(accountIdentifier)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    serviceProviderIdentifier: ").append(toIndentedString(serviceProviderIdentifier)).append("\n");
    sb.append("    directDebitMandateId: ").append(toIndentedString(directDebitMandateId)).append("\n");
    sb.append("    directDebitIban: ").append(toIndentedString(directDebitIban)).append("\n");
    sb.append("    paymentId: ").append(toIndentedString(paymentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

