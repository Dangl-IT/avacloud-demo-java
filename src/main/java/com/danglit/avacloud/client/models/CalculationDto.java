/*
 * AVACloud API 1.10.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.10.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * This class holds means to calculate mathematical expressions from given strings.
 */
@ApiModel(description = "This class holds means to calculate mathematical expressions from given strings.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-16T17:38:52.250Z")
public class CalculationDto {
  @SerializedName("description")
  private String description = null;

  @SerializedName("formula")
  private String formula = null;

  @SerializedName("result")
  private Double result = null;

  @SerializedName("valid")
  private Boolean valid = null;

  @SerializedName("errorPositionInLine")
  private Integer errorPositionInLine = null;

  public CalculationDto description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Descriptive text for this calculation.
   * @return description
  **/
  @ApiModelProperty(value = "Descriptive text for this calculation.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CalculationDto formula(String formula) {
    this.formula = formula;
    return this;
  }

   /**
   * This Calculation&#39;s mathematical expression. Please note that thousands separators are not supported. Both comma and point will be treated as decimal separators.
   * @return formula
  **/
  @ApiModelProperty(value = "This Calculation's mathematical expression. Please note that thousands separators are not supported. Both comma and point will be treated as decimal separators.")
  public String getFormula() {
    return formula;
  }

  public void setFormula(String formula) {
    this.formula = formula;
  }

   /**
   * The calculated result from the formula, 0 if invalid.
   * @return result
  **/
  @ApiModelProperty(required = true, value = "The calculated result from the formula, 0 if invalid.")
  public Double getResult() {
    return result;
  }

   /**
   * Whether the Formula is a valid expression.
   * @return valid
  **/
  @ApiModelProperty(required = true, value = "Whether the Formula is a valid expression.")
  public Boolean isValid() {
    return valid;
  }

   /**
   * Will be -1 if the Formula is correct, else it will show the position in the formula where an error was encountered. This is a zero based index.
   * @return errorPositionInLine
  **/
  @ApiModelProperty(required = true, value = "Will be -1 if the Formula is correct, else it will show the position in the formula where an error was encountered. This is a zero based index.")
  public Integer getErrorPositionInLine() {
    return errorPositionInLine;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculationDto calculationDto = (CalculationDto) o;
    return Objects.equals(this.description, calculationDto.description) &&
        Objects.equals(this.formula, calculationDto.formula) &&
        Objects.equals(this.result, calculationDto.result) &&
        Objects.equals(this.valid, calculationDto.valid) &&
        Objects.equals(this.errorPositionInLine, calculationDto.errorPositionInLine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, formula, result, valid, errorPositionInLine);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculationDto {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    formula: ").append(toIndentedString(formula)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("    errorPositionInLine: ").append(toIndentedString(errorPositionInLine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

