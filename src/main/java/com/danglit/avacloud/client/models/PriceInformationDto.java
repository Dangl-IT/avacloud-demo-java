/*
 * AVACloud API 1.29.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.29.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.danglit.avacloud.client.models.TradeDiscountDto;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Holds global price information for a ServiceSpecification
 */
@ApiModel(description = "Holds global price information for a ServiceSpecification")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-06-27T14:07:49.059Z")
public class PriceInformationDto {
  @SerializedName("id")
  private String id = null;

  @SerializedName("hourlyWage")
  private BigDecimal hourlyWage = null;

  @SerializedName("deductionFactor")
  private BigDecimal deductionFactor = null;

  @SerializedName("flatSum")
  private BigDecimal flatSum = null;

  @SerializedName("taxRate")
  private BigDecimal taxRate = null;

  @SerializedName("tradeDiscounts")
  private List<TradeDiscountDto> tradeDiscounts = null;

  public PriceInformationDto id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Elements GUID identifier.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Elements GUID identifier.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PriceInformationDto hourlyWage(BigDecimal hourlyWage) {
    this.hourlyWage = hourlyWage;
    return this;
  }

   /**
   * The amount of currency per one hour of manual labour work in this project.
   * @return hourlyWage
  **/
  @ApiModelProperty(required = true, value = "The amount of currency per one hour of manual labour work in this project.")
  public BigDecimal getHourlyWage() {
    return hourlyWage;
  }

  public void setHourlyWage(BigDecimal hourlyWage) {
    this.hourlyWage = hourlyWage;
  }

  public PriceInformationDto deductionFactor(BigDecimal deductionFactor) {
    this.deductionFactor = deductionFactor;
    return this;
  }

   /**
   * The final, total price will be deducted by this rate.
   * @return deductionFactor
  **/
  @ApiModelProperty(required = true, value = "The final, total price will be deducted by this rate.")
  public BigDecimal getDeductionFactor() {
    return deductionFactor;
  }

  public void setDeductionFactor(BigDecimal deductionFactor) {
    this.deductionFactor = deductionFactor;
  }

  public PriceInformationDto flatSum(BigDecimal flatSum) {
    this.flatSum = flatSum;
    return this;
  }

   /**
   * This is given when there is only one flat price for the whole service specification.
   * @return flatSum
  **/
  @ApiModelProperty(required = true, value = "This is given when there is only one flat price for the whole service specification.")
  public BigDecimal getFlatSum() {
    return flatSum;
  }

  public void setFlatSum(BigDecimal flatSum) {
    this.flatSum = flatSum;
  }

  public PriceInformationDto taxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
    return this;
  }

   /**
   * Global tax rate for the project. Note that certain elements may have a different, specific tax rate.
   * @return taxRate
  **/
  @ApiModelProperty(required = true, value = "Global tax rate for the project. Note that certain elements may have a different, specific tax rate.")
  public BigDecimal getTaxRate() {
    return taxRate;
  }

  public void setTaxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
  }

  public PriceInformationDto tradeDiscounts(List<TradeDiscountDto> tradeDiscounts) {
    this.tradeDiscounts = tradeDiscounts;
    return this;
  }

  public PriceInformationDto addTradeDiscountsItem(TradeDiscountDto tradeDiscountsItem) {
    if (this.tradeDiscounts == null) {
      this.tradeDiscounts = new ArrayList<>();
    }
    this.tradeDiscounts.add(tradeDiscountsItem);
    return this;
  }

   /**
   * Trade discounts for offered in this ServiceSpecification.
   * @return tradeDiscounts
  **/
  @ApiModelProperty(value = "Trade discounts for offered in this ServiceSpecification.")
  public List<TradeDiscountDto> getTradeDiscounts() {
    return tradeDiscounts;
  }

  public void setTradeDiscounts(List<TradeDiscountDto> tradeDiscounts) {
    this.tradeDiscounts = tradeDiscounts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceInformationDto priceInformationDto = (PriceInformationDto) o;
    return Objects.equals(this.id, priceInformationDto.id) &&
        Objects.equals(this.hourlyWage, priceInformationDto.hourlyWage) &&
        Objects.equals(this.deductionFactor, priceInformationDto.deductionFactor) &&
        Objects.equals(this.flatSum, priceInformationDto.flatSum) &&
        Objects.equals(this.taxRate, priceInformationDto.taxRate) &&
        Objects.equals(this.tradeDiscounts, priceInformationDto.tradeDiscounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, hourlyWage, deductionFactor, flatSum, taxRate, tradeDiscounts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceInformationDto {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    hourlyWage: ").append(toIndentedString(hourlyWage)).append("\n");
    sb.append("    deductionFactor: ").append(toIndentedString(deductionFactor)).append("\n");
    sb.append("    flatSum: ").append(toIndentedString(flatSum)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    tradeDiscounts: ").append(toIndentedString(tradeDiscounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

