/*
 * AVACloud API 1.0.7
 * The full AVACloud API specification
 *
 * OpenAPI spec version: 1.0.7
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import com.danglit.avacloud.client.models.AdditionTypeDto;
import com.danglit.avacloud.client.models.CalculationDto;
import com.danglit.avacloud.client.models.ComissionStatusDto;
import com.danglit.avacloud.client.models.CommercePropertiesDto;
import com.danglit.avacloud.client.models.IElementDto;
import com.danglit.avacloud.client.models.ItemNumberDto;
import com.danglit.avacloud.client.models.LabourPriceComponentDto;
import com.danglit.avacloud.client.models.PriceComponentDto;
import com.danglit.avacloud.client.models.PriceTypeDto;
import com.danglit.avacloud.client.models.QuantityAssignmentDto;
import com.danglit.avacloud.client.models.ServiceTypeDto;
import com.danglit.avacloud.client.models.SubDescriptionDto;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * PositionDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-08T14:34:08.693Z")
public class PositionDto extends IElementDto {
  @SerializedName("unitPrice")
  private BigDecimal unitPrice = null;

  @SerializedName("quantity")
  private BigDecimal quantity = null;

  @SerializedName("unitTag")
  private String unitTag = null;

  @SerializedName("labourComponents")
  private LabourPriceComponentDto labourComponents = null;

  @SerializedName("priceComponents")
  private List<PriceComponentDto> priceComponents = null;

  @SerializedName("quantityComponents")
  private List<CalculationDto> quantityComponents = null;

  @SerializedName("subDescriptions")
  private List<SubDescriptionDto> subDescriptions = null;

  @SerializedName("comissionStatus")
  private ComissionStatusDto comissionStatus = null;

  @SerializedName("complementedBy")
  private List<String> complementedBy = null;

  @SerializedName("complemented")
  private Boolean complemented = null;

  @SerializedName("amountToBeEnteredByBidder")
  private Boolean amountToBeEnteredByBidder = null;

  @SerializedName("priceCompositionRequired")
  private Boolean priceCompositionRequired = null;

  @SerializedName("useDifferentTaxRate")
  private Boolean useDifferentTaxRate = null;

  @SerializedName("taxRate")
  private BigDecimal taxRate = null;

  @SerializedName("itemNumber")
  private ItemNumberDto itemNumber = null;

  @SerializedName("deductionFactor")
  private BigDecimal deductionFactor = null;

  @SerializedName("totalPrice")
  private BigDecimal totalPrice = null;

  @SerializedName("totalPriceGross")
  private BigDecimal totalPriceGross = null;

  @SerializedName("totalPriceGrossDeducted")
  private BigDecimal totalPriceGrossDeducted = null;

  @SerializedName("deductedPrice")
  private BigDecimal deductedPrice = null;

  @SerializedName("type")
  private PriceTypeDto type = null;

  @SerializedName("serviceType")
  private ServiceTypeDto serviceType = null;

  @SerializedName("shortText")
  private String shortText = null;

  @SerializedName("longText")
  private String longText = null;

  @SerializedName("htmlLongText")
  private String htmlLongText = null;

  @SerializedName("additionType")
  private AdditionTypeDto additionType = null;

  @SerializedName("elementType")
  private String elementType = null;

  @SerializedName("quantityAssignments")
  private List<QuantityAssignmentDto> quantityAssignments = null;

  @SerializedName("commerceProperties")
  private CommercePropertiesDto commerceProperties = null;

  public PositionDto unitPrice(BigDecimal unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(BigDecimal unitPrice) {
    this.unitPrice = unitPrice;
  }

  public PositionDto quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  public PositionDto unitTag(String unitTag) {
    this.unitTag = unitTag;
    return this;
  }

   /**
   * Get unitTag
   * @return unitTag
  **/
  @ApiModelProperty(value = "")
  public String getUnitTag() {
    return unitTag;
  }

  public void setUnitTag(String unitTag) {
    this.unitTag = unitTag;
  }

  public PositionDto labourComponents(LabourPriceComponentDto labourComponents) {
    this.labourComponents = labourComponents;
    return this;
  }

   /**
   * Get labourComponents
   * @return labourComponents
  **/
  @ApiModelProperty(value = "")
  public LabourPriceComponentDto getLabourComponents() {
    return labourComponents;
  }

  public void setLabourComponents(LabourPriceComponentDto labourComponents) {
    this.labourComponents = labourComponents;
  }

  public PositionDto priceComponents(List<PriceComponentDto> priceComponents) {
    this.priceComponents = priceComponents;
    return this;
  }

  public PositionDto addPriceComponentsItem(PriceComponentDto priceComponentsItem) {
    if (this.priceComponents == null) {
      this.priceComponents = new ArrayList<>();
    }
    this.priceComponents.add(priceComponentsItem);
    return this;
  }

   /**
   * Get priceComponents
   * @return priceComponents
  **/
  @ApiModelProperty(value = "")
  public List<PriceComponentDto> getPriceComponents() {
    return priceComponents;
  }

  public void setPriceComponents(List<PriceComponentDto> priceComponents) {
    this.priceComponents = priceComponents;
  }

  public PositionDto quantityComponents(List<CalculationDto> quantityComponents) {
    this.quantityComponents = quantityComponents;
    return this;
  }

  public PositionDto addQuantityComponentsItem(CalculationDto quantityComponentsItem) {
    if (this.quantityComponents == null) {
      this.quantityComponents = new ArrayList<>();
    }
    this.quantityComponents.add(quantityComponentsItem);
    return this;
  }

   /**
   * Get quantityComponents
   * @return quantityComponents
  **/
  @ApiModelProperty(value = "")
  public List<CalculationDto> getQuantityComponents() {
    return quantityComponents;
  }

  public void setQuantityComponents(List<CalculationDto> quantityComponents) {
    this.quantityComponents = quantityComponents;
  }

  public PositionDto subDescriptions(List<SubDescriptionDto> subDescriptions) {
    this.subDescriptions = subDescriptions;
    return this;
  }

  public PositionDto addSubDescriptionsItem(SubDescriptionDto subDescriptionsItem) {
    if (this.subDescriptions == null) {
      this.subDescriptions = new ArrayList<>();
    }
    this.subDescriptions.add(subDescriptionsItem);
    return this;
  }

   /**
   * Get subDescriptions
   * @return subDescriptions
  **/
  @ApiModelProperty(value = "")
  public List<SubDescriptionDto> getSubDescriptions() {
    return subDescriptions;
  }

  public void setSubDescriptions(List<SubDescriptionDto> subDescriptions) {
    this.subDescriptions = subDescriptions;
  }

  public PositionDto comissionStatus(ComissionStatusDto comissionStatus) {
    this.comissionStatus = comissionStatus;
    return this;
  }

   /**
   * Get comissionStatus
   * @return comissionStatus
  **/
  @ApiModelProperty(value = "")
  public ComissionStatusDto getComissionStatus() {
    return comissionStatus;
  }

  public void setComissionStatus(ComissionStatusDto comissionStatus) {
    this.comissionStatus = comissionStatus;
  }

  public PositionDto complementedBy(List<String> complementedBy) {
    this.complementedBy = complementedBy;
    return this;
  }

  public PositionDto addComplementedByItem(String complementedByItem) {
    if (this.complementedBy == null) {
      this.complementedBy = new ArrayList<>();
    }
    this.complementedBy.add(complementedByItem);
    return this;
  }

   /**
   * Get complementedBy
   * @return complementedBy
  **/
  @ApiModelProperty(value = "")
  public List<String> getComplementedBy() {
    return complementedBy;
  }

  public void setComplementedBy(List<String> complementedBy) {
    this.complementedBy = complementedBy;
  }

  public PositionDto complemented(Boolean complemented) {
    this.complemented = complemented;
    return this;
  }

   /**
   * Get complemented
   * @return complemented
  **/
  @ApiModelProperty(value = "")
  public Boolean isComplemented() {
    return complemented;
  }

  public void setComplemented(Boolean complemented) {
    this.complemented = complemented;
  }

  public PositionDto amountToBeEnteredByBidder(Boolean amountToBeEnteredByBidder) {
    this.amountToBeEnteredByBidder = amountToBeEnteredByBidder;
    return this;
  }

   /**
   * Get amountToBeEnteredByBidder
   * @return amountToBeEnteredByBidder
  **/
  @ApiModelProperty(value = "")
  public Boolean isAmountToBeEnteredByBidder() {
    return amountToBeEnteredByBidder;
  }

  public void setAmountToBeEnteredByBidder(Boolean amountToBeEnteredByBidder) {
    this.amountToBeEnteredByBidder = amountToBeEnteredByBidder;
  }

  public PositionDto priceCompositionRequired(Boolean priceCompositionRequired) {
    this.priceCompositionRequired = priceCompositionRequired;
    return this;
  }

   /**
   * Get priceCompositionRequired
   * @return priceCompositionRequired
  **/
  @ApiModelProperty(value = "")
  public Boolean isPriceCompositionRequired() {
    return priceCompositionRequired;
  }

  public void setPriceCompositionRequired(Boolean priceCompositionRequired) {
    this.priceCompositionRequired = priceCompositionRequired;
  }

  public PositionDto useDifferentTaxRate(Boolean useDifferentTaxRate) {
    this.useDifferentTaxRate = useDifferentTaxRate;
    return this;
  }

   /**
   * Get useDifferentTaxRate
   * @return useDifferentTaxRate
  **/
  @ApiModelProperty(value = "")
  public Boolean isUseDifferentTaxRate() {
    return useDifferentTaxRate;
  }

  public void setUseDifferentTaxRate(Boolean useDifferentTaxRate) {
    this.useDifferentTaxRate = useDifferentTaxRate;
  }

  public PositionDto taxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
    return this;
  }

   /**
   * Get taxRate
   * @return taxRate
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getTaxRate() {
    return taxRate;
  }

  public void setTaxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
  }

  public PositionDto itemNumber(ItemNumberDto itemNumber) {
    this.itemNumber = itemNumber;
    return this;
  }

   /**
   * Get itemNumber
   * @return itemNumber
  **/
  @ApiModelProperty(value = "")
  public ItemNumberDto getItemNumber() {
    return itemNumber;
  }

  public void setItemNumber(ItemNumberDto itemNumber) {
    this.itemNumber = itemNumber;
  }

  public PositionDto deductionFactor(BigDecimal deductionFactor) {
    this.deductionFactor = deductionFactor;
    return this;
  }

   /**
   * Get deductionFactor
   * @return deductionFactor
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getDeductionFactor() {
    return deductionFactor;
  }

  public void setDeductionFactor(BigDecimal deductionFactor) {
    this.deductionFactor = deductionFactor;
  }

  public PositionDto totalPrice(BigDecimal totalPrice) {
    this.totalPrice = totalPrice;
    return this;
  }

   /**
   * Get totalPrice
   * @return totalPrice
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getTotalPrice() {
    return totalPrice;
  }

  public void setTotalPrice(BigDecimal totalPrice) {
    this.totalPrice = totalPrice;
  }

  public PositionDto totalPriceGross(BigDecimal totalPriceGross) {
    this.totalPriceGross = totalPriceGross;
    return this;
  }

   /**
   * Get totalPriceGross
   * @return totalPriceGross
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getTotalPriceGross() {
    return totalPriceGross;
  }

  public void setTotalPriceGross(BigDecimal totalPriceGross) {
    this.totalPriceGross = totalPriceGross;
  }

  public PositionDto totalPriceGrossDeducted(BigDecimal totalPriceGrossDeducted) {
    this.totalPriceGrossDeducted = totalPriceGrossDeducted;
    return this;
  }

   /**
   * Get totalPriceGrossDeducted
   * @return totalPriceGrossDeducted
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getTotalPriceGrossDeducted() {
    return totalPriceGrossDeducted;
  }

  public void setTotalPriceGrossDeducted(BigDecimal totalPriceGrossDeducted) {
    this.totalPriceGrossDeducted = totalPriceGrossDeducted;
  }

  public PositionDto deductedPrice(BigDecimal deductedPrice) {
    this.deductedPrice = deductedPrice;
    return this;
  }

   /**
   * Get deductedPrice
   * @return deductedPrice
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getDeductedPrice() {
    return deductedPrice;
  }

  public void setDeductedPrice(BigDecimal deductedPrice) {
    this.deductedPrice = deductedPrice;
  }

  public PositionDto type(PriceTypeDto type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public PriceTypeDto getType() {
    return type;
  }

  public void setType(PriceTypeDto type) {
    this.type = type;
  }

  public PositionDto serviceType(ServiceTypeDto serviceType) {
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Get serviceType
   * @return serviceType
  **/
  @ApiModelProperty(value = "")
  public ServiceTypeDto getServiceType() {
    return serviceType;
  }

  public void setServiceType(ServiceTypeDto serviceType) {
    this.serviceType = serviceType;
  }

  public PositionDto shortText(String shortText) {
    this.shortText = shortText;
    return this;
  }

   /**
   * Get shortText
   * @return shortText
  **/
  @ApiModelProperty(value = "")
  public String getShortText() {
    return shortText;
  }

  public void setShortText(String shortText) {
    this.shortText = shortText;
  }

  public PositionDto longText(String longText) {
    this.longText = longText;
    return this;
  }

   /**
   * Get longText
   * @return longText
  **/
  @ApiModelProperty(value = "")
  public String getLongText() {
    return longText;
  }

  public void setLongText(String longText) {
    this.longText = longText;
  }

  public PositionDto htmlLongText(String htmlLongText) {
    this.htmlLongText = htmlLongText;
    return this;
  }

   /**
   * Get htmlLongText
   * @return htmlLongText
  **/
  @ApiModelProperty(value = "")
  public String getHtmlLongText() {
    return htmlLongText;
  }

  public void setHtmlLongText(String htmlLongText) {
    this.htmlLongText = htmlLongText;
  }

  public PositionDto additionType(AdditionTypeDto additionType) {
    this.additionType = additionType;
    return this;
  }

   /**
   * Get additionType
   * @return additionType
  **/
  @ApiModelProperty(value = "")
  public AdditionTypeDto getAdditionType() {
    return additionType;
  }

  public void setAdditionType(AdditionTypeDto additionType) {
    this.additionType = additionType;
  }

  public PositionDto elementType(String elementType) {
    this.elementType = elementType;
    return this;
  }

   /**
   * Get elementType
   * @return elementType
  **/
  @ApiModelProperty(value = "")
  public String getElementType() {
    return elementType;
  }

  public void setElementType(String elementType) {
    this.elementType = elementType;
  }

  public PositionDto quantityAssignments(List<QuantityAssignmentDto> quantityAssignments) {
    this.quantityAssignments = quantityAssignments;
    return this;
  }

  public PositionDto addQuantityAssignmentsItem(QuantityAssignmentDto quantityAssignmentsItem) {
    if (this.quantityAssignments == null) {
      this.quantityAssignments = new ArrayList<>();
    }
    this.quantityAssignments.add(quantityAssignmentsItem);
    return this;
  }

   /**
   * Get quantityAssignments
   * @return quantityAssignments
  **/
  @ApiModelProperty(value = "")
  public List<QuantityAssignmentDto> getQuantityAssignments() {
    return quantityAssignments;
  }

  public void setQuantityAssignments(List<QuantityAssignmentDto> quantityAssignments) {
    this.quantityAssignments = quantityAssignments;
  }

  public PositionDto commerceProperties(CommercePropertiesDto commerceProperties) {
    this.commerceProperties = commerceProperties;
    return this;
  }

   /**
   * Get commerceProperties
   * @return commerceProperties
  **/
  @ApiModelProperty(value = "")
  public CommercePropertiesDto getCommerceProperties() {
    return commerceProperties;
  }

  public void setCommerceProperties(CommercePropertiesDto commerceProperties) {
    this.commerceProperties = commerceProperties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PositionDto positionDto = (PositionDto) o;
    return Objects.equals(this.unitPrice, positionDto.unitPrice) &&
        Objects.equals(this.quantity, positionDto.quantity) &&
        Objects.equals(this.unitTag, positionDto.unitTag) &&
        Objects.equals(this.labourComponents, positionDto.labourComponents) &&
        Objects.equals(this.priceComponents, positionDto.priceComponents) &&
        Objects.equals(this.quantityComponents, positionDto.quantityComponents) &&
        Objects.equals(this.subDescriptions, positionDto.subDescriptions) &&
        Objects.equals(this.comissionStatus, positionDto.comissionStatus) &&
        Objects.equals(this.complementedBy, positionDto.complementedBy) &&
        Objects.equals(this.complemented, positionDto.complemented) &&
        Objects.equals(this.amountToBeEnteredByBidder, positionDto.amountToBeEnteredByBidder) &&
        Objects.equals(this.priceCompositionRequired, positionDto.priceCompositionRequired) &&
        Objects.equals(this.useDifferentTaxRate, positionDto.useDifferentTaxRate) &&
        Objects.equals(this.taxRate, positionDto.taxRate) &&
        Objects.equals(this.itemNumber, positionDto.itemNumber) &&
        Objects.equals(this.deductionFactor, positionDto.deductionFactor) &&
        Objects.equals(this.totalPrice, positionDto.totalPrice) &&
        Objects.equals(this.totalPriceGross, positionDto.totalPriceGross) &&
        Objects.equals(this.totalPriceGrossDeducted, positionDto.totalPriceGrossDeducted) &&
        Objects.equals(this.deductedPrice, positionDto.deductedPrice) &&
        Objects.equals(this.type, positionDto.type) &&
        Objects.equals(this.serviceType, positionDto.serviceType) &&
        Objects.equals(this.shortText, positionDto.shortText) &&
        Objects.equals(this.longText, positionDto.longText) &&
        Objects.equals(this.htmlLongText, positionDto.htmlLongText) &&
        Objects.equals(this.additionType, positionDto.additionType) &&
        Objects.equals(this.elementType, positionDto.elementType) &&
        Objects.equals(this.quantityAssignments, positionDto.quantityAssignments) &&
        Objects.equals(this.commerceProperties, positionDto.commerceProperties) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unitPrice, quantity, unitTag, labourComponents, priceComponents, quantityComponents, subDescriptions, comissionStatus, complementedBy, complemented, amountToBeEnteredByBidder, priceCompositionRequired, useDifferentTaxRate, taxRate, itemNumber, deductionFactor, totalPrice, totalPriceGross, totalPriceGrossDeducted, deductedPrice, type, serviceType, shortText, longText, htmlLongText, additionType, elementType, quantityAssignments, commerceProperties, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PositionDto {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitTag: ").append(toIndentedString(unitTag)).append("\n");
    sb.append("    labourComponents: ").append(toIndentedString(labourComponents)).append("\n");
    sb.append("    priceComponents: ").append(toIndentedString(priceComponents)).append("\n");
    sb.append("    quantityComponents: ").append(toIndentedString(quantityComponents)).append("\n");
    sb.append("    subDescriptions: ").append(toIndentedString(subDescriptions)).append("\n");
    sb.append("    comissionStatus: ").append(toIndentedString(comissionStatus)).append("\n");
    sb.append("    complementedBy: ").append(toIndentedString(complementedBy)).append("\n");
    sb.append("    complemented: ").append(toIndentedString(complemented)).append("\n");
    sb.append("    amountToBeEnteredByBidder: ").append(toIndentedString(amountToBeEnteredByBidder)).append("\n");
    sb.append("    priceCompositionRequired: ").append(toIndentedString(priceCompositionRequired)).append("\n");
    sb.append("    useDifferentTaxRate: ").append(toIndentedString(useDifferentTaxRate)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    itemNumber: ").append(toIndentedString(itemNumber)).append("\n");
    sb.append("    deductionFactor: ").append(toIndentedString(deductionFactor)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    totalPriceGross: ").append(toIndentedString(totalPriceGross)).append("\n");
    sb.append("    totalPriceGrossDeducted: ").append(toIndentedString(totalPriceGrossDeducted)).append("\n");
    sb.append("    deductedPrice: ").append(toIndentedString(deductedPrice)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    shortText: ").append(toIndentedString(shortText)).append("\n");
    sb.append("    longText: ").append(toIndentedString(longText)).append("\n");
    sb.append("    htmlLongText: ").append(toIndentedString(htmlLongText)).append("\n");
    sb.append("    additionType: ").append(toIndentedString(additionType)).append("\n");
    sb.append("    elementType: ").append(toIndentedString(elementType)).append("\n");
    sb.append("    quantityAssignments: ").append(toIndentedString(quantityAssignments)).append("\n");
    sb.append("    commerceProperties: ").append(toIndentedString(commerceProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

