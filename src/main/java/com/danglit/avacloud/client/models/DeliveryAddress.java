/*
 * AVACloud API 1.59.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.59.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Address for deliveries
 */
@ApiModel(description = "Address for deliveries")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2025-04-09T18:36:39.750Z")
public class DeliveryAddress {
  @SerializedName("address")
  private String address = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("zipCode")
  private String zipCode = null;

  @SerializedName("countryCode")
  private String countryCode = null;

  public DeliveryAddress address(String address) {
    this.address = address;
    return this;
  }

   /**
   * The address. BT-75, BT-76 and BT-165 in XRechnung.
   * @return address
  **/
  @ApiModelProperty(value = "The address. BT-75, BT-76 and BT-165 in XRechnung.")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public DeliveryAddress city(String city) {
    this.city = city;
    return this;
  }

   /**
   * The city. BT-77 in XRechnung.
   * @return city
  **/
  @ApiModelProperty(value = "The city. BT-77 in XRechnung.")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public DeliveryAddress zipCode(String zipCode) {
    this.zipCode = zipCode;
    return this;
  }

   /**
   * The zip code. BT-78 in XRechnung.
   * @return zipCode
  **/
  @ApiModelProperty(value = "The zip code. BT-78 in XRechnung.")
  public String getZipCode() {
    return zipCode;
  }

  public void setZipCode(String zipCode) {
    this.zipCode = zipCode;
  }

  public DeliveryAddress countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * The ISO 3166-1 2 letter country code. BT-80 in XRechnung.
   * @return countryCode
  **/
  @ApiModelProperty(value = "The ISO 3166-1 2 letter country code. BT-80 in XRechnung.")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeliveryAddress deliveryAddress = (DeliveryAddress) o;
    return Objects.equals(this.address, deliveryAddress.address) &&
        Objects.equals(this.city, deliveryAddress.city) &&
        Objects.equals(this.zipCode, deliveryAddress.zipCode) &&
        Objects.equals(this.countryCode, deliveryAddress.countryCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, city, zipCode, countryCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeliveryAddress {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

