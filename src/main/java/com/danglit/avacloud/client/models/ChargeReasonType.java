/*
 * AVACloud API 1.59.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.59.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Type specifying a special service from UNTDID 7161. See this list: https://unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred7161.htm
 */
@JsonAdapter(ChargeReasonType.Adapter.class)
public enum ChargeReasonType {
  
  ADVERTISING("Advertising"),
  
  TELECOMMUNICATION("Telecommunication"),
  
  TECHNICALMODIFICATION("TechnicalModification"),
  
  JOBORDERPRODUCTION("JobOrderProduction"),
  
  OUTLAYS("Outlays"),
  
  OFFPREMISES("OffPremises"),
  
  ADDITIONALPROCESSING("AdditionalProcessing"),
  
  ATTESTING("Attesting"),
  
  ACCEPTANCE("Acceptance"),
  
  RUSHDELIVERY("RushDelivery"),
  
  SPECIALCONSTRUCTION("SpecialConstruction"),
  
  AIRPORTFACILITIES("AirportFacilities"),
  
  CONCESSION("Concession"),
  
  COMPULSORYSTORAGE("CompulsoryStorage"),
  
  FUELREMOVAL("FuelRemoval"),
  
  INTOPLANE("IntoPlane"),
  
  OVERTIME("Overtime"),
  
  TOOLING("Tooling"),
  
  MISCELLANEOUS("Miscellaneous"),
  
  ADDITIONALPACKAGING("AdditionalPackaging"),
  
  DUNNAGE("Dunnage"),
  
  CONTAINERISATION("Containerisation"),
  
  CARTONPACKING("CartonPacking"),
  
  HESSIANWRAPPED("HessianWrapped"),
  
  POLYETHYLENEWRAPPACKING("PolyethyleneWrapPacking"),
  
  MISCELLANEOUSTREATMENT("MiscellaneousTreatment"),
  
  ENAMELLINGTREATMENT("EnamellingTreatment"),
  
  HEATTREATMENT("HeatTreatment"),
  
  PLATINGTREATMENT("PlatingTreatment"),
  
  PAINTING("Painting"),
  
  POLISHING("Polishing"),
  
  PRIMING("Priming"),
  
  PRESERVATIONTREATMENT("PreservationTreatment"),
  
  FITTING("Fitting"),
  
  CONSOLIDATION("Consolidation"),
  
  BILLOFLADING("BillOfLading"),
  
  AIRBAG("Airbag"),
  
  TRANSFER("Transfer"),
  
  SLIPSHEET("Slipsheet"),
  
  BINDING("Binding"),
  
  REPAIRORREPLACEMENTOFBROKENRETURNABLEPACKAGE("RepairOrReplacementOfBrokenReturnablePackage"),
  
  EFFICIENTLOGISTICS("EfficientLogistics"),
  
  MERCHANDISING("Merchandising"),
  
  PRODUCTMIX("ProductMix"),
  
  OTHERSERVICES("OtherServices"),
  
  PICKUP("PickUp"),
  
  CHRONICILLNESS("ChronicIllness"),
  
  NEWPRODUCTINTRODUCTION("NewProductIntroduction"),
  
  DIRECTDELIVERY("DirectDelivery"),
  
  DIVERSION("Diversion"),
  
  DISCONNECT("Disconnect"),
  
  DISTRIBUTION("Distribution"),
  
  HANDLINGOFHAZARDOUSCARGO("HandlingOfHazardousCargo"),
  
  RENTSANDLEASES("RentsAndLeases"),
  
  LOCATIONDIFFERENTIAL("LocationDifferential"),
  
  AIRCRAFTREFUELING("AircraftRefueling"),
  
  FUELSHIPPEDINTOSTORAGE("FuelShippedIntoStorage"),
  
  CASHONDELIVERY("CashOnDelivery"),
  
  SMALLORDERPROCESSINGSERVICE("SmallOrderProcessingService"),
  
  CLERICALORADMINISTRATIVESERVICES("ClericalOrAdministrativeServices"),
  
  GUARANTEE("Guarantee"),
  
  COLLECTIONANDRECYCLING("CollectionAndRecycling"),
  
  COPYRIGHTFEECOLLECTION("CopyrightFeeCollection"),
  
  VETERINARYINSPECTIONSERVICE("VeterinaryInspectionService"),
  
  PENSIONERSERVICE("PensionerService"),
  
  MEDICINEFREEPASSHOLDER("MedicineFreePassHolder"),
  
  ENVIRONMENTALPROTECTIONSERVICE("EnvironmentalProtectionService"),
  
  ENVIRONMENTALCLEANUPSERVICE("EnvironmentalCleanUpService"),
  
  NATIONALCHEQUEPROCESSINGSERVICEOUTSIDEACCOUNTAREA("NationalChequeProcessingServiceOutsideAccountArea"),
  
  NATIONALPAYMENTSERVICEOUTSIDEACCOUNTAREA("NationalPaymentServiceOutsideAccountArea"),
  
  NATIONALPAYMENTSERVICEWITHINACCOUNTAREA("NationalPaymentServiceWithinAccountArea"),
  
  ADJUSTMENTS("Adjustments"),
  
  AUTHENTICATION("Authentication"),
  
  CATALOGUING("Cataloguing"),
  
  CARTAGE("Cartage"),
  
  CERTIFICATION("Certification"),
  
  CERTIFICATEOFCONFORMANCE("CertificateOfConformance"),
  
  CERTIFICATEOFORIGIN("CertificateOfOrigin"),
  
  CUTTING("Cutting"),
  
  CONSULARSERVICE("ConsularService"),
  
  CUSTOMERCOLLECTION("CustomerCollection"),
  
  PAYROLLPAYMENTSERVICE("PayrollPaymentService"),
  
  CASHTRANSPORTATION("CashTransportation"),
  
  HOMEBANKINGSERVICE("HomeBankingService"),
  
  BILATERALAGREEMENTSERVICE("BilateralAgreementService"),
  
  INSURANCEBROKERAGESERVICE("InsuranceBrokerageService"),
  
  CHEQUEGENERATION("ChequeGeneration"),
  
  PREFERENTIALMERCHANDISINGLOCATION("PreferentialMerchandisingLocation"),
  
  CRANE("Crane"),
  
  SPECIALCOLOURSERVICE("SpecialColourService"),
  
  SORTING("Sorting"),
  
  BATTERYCOLLECTIONANDRECYCLING("BatteryCollectionAndRecycling"),
  
  PRODUCTTAKEBACKFEE("ProductTakeBackFee"),
  
  CARLOADING("CarLoading"),
  
  CLEANING("Cleaning"),
  
  CIGARETTESTAMPING("CigaretteStamping"),
  
  COUNTANDRECOUNT("CountAndRecount"),
  
  LAYOUTDESIGN("LayoutDesign"),
  
  DRIVERASSIGNEDUNLOADING("DriverAssignedUnloading"),
  
  DELIVERY("Delivery"),
  
  ENGRAVING("Engraving"),
  
  EXPEDITING("Expediting"),
  
  EXCHANGERATEGUARANTEE("ExchangeRateGuarantee"),
  
  FABRICATION("Fabrication"),
  
  FREIGHTEQUALIZATION("FreightEqualization"),
  
  FREIGHTEXTRAORDINARYHANDLING("FreightExtraordinaryHandling"),
  
  FREIGHTSERVICE("FreightService"),
  
  FILLINGHANDLING("FillingHandling"),
  
  FINANCING("Financing"),
  
  GRINDING("Grinding"),
  
  HOSE("Hose"),
  
  HANDLING("Handling"),
  
  HOISTINGANDHAULING("HoistingAndHauling"),
  
  INSTALLATION("Installation"),
  
  INSTALLATIONANDWARRANTY("InstallationAndWarranty"),
  
  INSIDEDELIVERY("InsideDelivery"),
  
  INSPECTION("Inspection"),
  
  INSTALLATIONANDTRAINING("InstallationAndTraining"),
  
  INVOICING("Invoicing"),
  
  KOSHERING("Koshering"),
  
  CARRIERCOUNT("CarrierCount"),
  
  LABELLING("Labelling"),
  
  LABOUR("Labour"),
  
  REPAIRANDRETURN("RepairAndReturn"),
  
  LEGALISATION("Legalisation"),
  
  MOUNTING("Mounting"),
  
  MAILINVOICE("MailInvoice"),
  
  MAILINVOICETOEACHLOCATION("MailInvoiceToEachLocation"),
  
  NONRETURNABLECONTAINERS("NonReturnableContainers"),
  
  OUTSIDECABLECONNECTORS("OutsideCableConnectors"),
  
  INVOICEWITHSHIPMENT("InvoiceWithShipment"),
  
  PHOSPHATIZINGSTEELTREATMENT("PhosphatizingSteelTreatment"),
  
  PACKING("Packing"),
  
  PALLETIZING("Palletizing"),
  
  REPACKING("Repacking"),
  
  REPAIR("Repair"),
  
  RETURNABLECONTAINER("ReturnableContainer"),
  
  RESTOCKING("Restocking"),
  
  REDELIVERY("ReDelivery"),
  
  REFURBISHING("Refurbishing"),
  
  RAILWAGONHIRE("RailWagonHire"),
  
  LOADING("Loading"),
  
  SALVAGING("Salvaging"),
  
  SHIPPINGANDHANDLING("ShippingAndHandling"),
  
  SPECIALPACKAGING("SpecialPackaging"),
  
  STAMPING("Stamping"),
  
  CONSIGNEEUNLOAD("ConsigneeUnload"),
  
  SHRINKWRAP("ShrinkWrap"),
  
  SPECIALHANDLING("SpecialHandling"),
  
  SPECIALFINISH("SpecialFinish"),
  
  SETUP("SetUp"),
  
  TANKRENTING("TankRenting"),
  
  TESTING("Testing"),
  
  TRANSPORTATIONTHIRDPARTYBILLING("TransportationThirdPartyBilling"),
  
  TRANSPORTATIONBYVENDOR("TransportationByVendor"),
  
  DROPYARD("DropYard"),
  
  DROPDOCK("DropDock"),
  
  WAREHOUSING("Warehousing"),
  
  COMBINEALLSAMEDAYSHIPMENT("CombineAllSameDayShipment"),
  
  SPLITPICKUP("SplitPickUp"),
  
  MUTUALLYDEFINED("MutuallyDefined");

  private String value;

  ChargeReasonType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ChargeReasonType fromValue(String text) {
    for (ChargeReasonType b : ChargeReasonType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<ChargeReasonType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ChargeReasonType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ChargeReasonType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ChargeReasonType.fromValue(String.valueOf(value));
    }
  }
}

