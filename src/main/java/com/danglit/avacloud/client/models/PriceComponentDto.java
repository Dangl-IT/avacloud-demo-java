/*
 * AVACloud API 1.10.0
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.10.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.danglit.avacloud.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.danglit.avacloud.client.models.CalculationDto;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * This class provides means to store information about a price and it&#39;s composition. Note that this is referencing to a single price component, so for example a Position would have a list of PriceComponents, one for Material, one for Labour etc.
 */
@ApiModel(description = "This class provides means to store information about a price and it's composition. Note that this is referencing to a single price component, so for example a Position would have a list of PriceComponents, one for Material, one for Labour etc.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-16T17:38:52.250Z")
public class PriceComponentDto {
  @SerializedName("price")
  private BigDecimal price = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("values")
  private List<CalculationDto> values = null;

   /**
   * The total, calculated price of this component.
   * @return price
  **/
  @ApiModelProperty(required = true, value = "The total, calculated price of this component.")
  public BigDecimal getPrice() {
    return price;
  }

  public PriceComponentDto label(String label) {
    this.label = label;
    return this;
  }

   /**
   * The label associated with this price component. Will be taken from the parent Projects ProjectInformation.
   * @return label
  **/
  @ApiModelProperty(value = "The label associated with this price component. Will be taken from the parent Projects ProjectInformation.")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public PriceComponentDto values(List<CalculationDto> values) {
    this.values = values;
    return this;
  }

  public PriceComponentDto addValuesItem(CalculationDto valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * The single Calculation elements this price component is composed of.
   * @return values
  **/
  @ApiModelProperty(value = "The single Calculation elements this price component is composed of.")
  public List<CalculationDto> getValues() {
    return values;
  }

  public void setValues(List<CalculationDto> values) {
    this.values = values;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceComponentDto priceComponentDto = (PriceComponentDto) o;
    return Objects.equals(this.price, priceComponentDto.price) &&
        Objects.equals(this.label, priceComponentDto.label) &&
        Objects.equals(this.values, priceComponentDto.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(price, label, values);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceComponentDto {\n");
    
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

